{"version":3,"sources":["components/navbar.jsx","components/create_tutorial.component.jsx","components/tutorials_list.component.jsx","components/show_tutorial.component.jsx","components/create_step.component.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navbar","renderNewStepLink","to","className","path","this","Component","CreateTutorial","props","onChangeTutorialTitle","e","setState","tutorial_title","target","value","onSubmit","preventDefault","newTutorial","state","Axios","post","then","res","console","log","catch","err","tutorial_steps","type","placeholder","onChange","TutorialsList","tutorials","fetchTutorials","axios","get","response","data","error","tutorialId","delete","Fragment","map","_id","key","onClick","deleteTutorial","ShowTutorial","tutorial","steps","match","params","id","fetchTutorial","fetchSteps","stepId","step_description","step_media","src","alt","deleteStep","renderSteps","CreateStep","onChangeStepDescription","onChangeStepMedia","tutorialID","newStep","window","location","href","App","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.aeb01401.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link, Switch, Route } from 'react-router-dom'\n\nexport default class Navbar extends Component {\n  renderNewStepLink = () => {\n    return(\n      <Link to='/tutorials/:id/steps/new'>Add a step</Link>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"navbar\">\n        <Switch>\n          <Route path='/'>\n            <Link to='/'> Home </Link>\n            <Link to='/tutorials/new'> Create a Tutorial </Link>\n          </Route>\n          <Route path='/tutorials/:id'>\n            <Link to='/'> Home </Link>\n            <Link to='/tutorials/new'> Create a Tutorial </Link>\n            <Link to=''>{this.renderNewStepLink()}</Link>\n          </Route>\n        </Switch>\n\n\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { BrowserRouter as Link } from \"react-router-dom\";\nimport Axios from 'axios';\n\nexport default class CreateTutorial extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tutorial_title: '',\n      tutorial_steps: []\n    }\n  }\n\n  onChangeTutorialTitle = (e) => {\n    this.setState({ tutorial_title: e.target.value })\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const newTutorial = { tutorial_title: this.state.tutorial_title };\n    Axios.post('api/tutorials/create', newTutorial)\n      .then(res => console.log(res))\n      .catch(err => console.log(err))\n  }\n\n  render() {\n    return (\n      <div>\n      <h2>Create a new tutorial</h2>\n        <form onSubmit={this.onSubmit}>\n          <input\n            type='text'\n            placeholder=\"Enter a name for your tutorial\"\n            onChange={this.onChangeTutorialTitle}\n            value={this.state.tutorial_title}\n          />\n          <input type='submit'/>\n        </form>\n      </div>\n\n    )\n  }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass TutorialsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tutorials: []\n    }\n    console.log(this.state)\n  }\n\n  componentDidMount() {\n    this.fetchTutorials();\n  }\n\n  fetchTutorials() {\n    axios.get('api/tutorials/')\n      .then(response => {\n        console.log(response.data)\n        this.setState({ tutorials: response.data })\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  deleteTutorial(tutorialId) {\n    console.log('Deleting')\n    axios.delete(`api/tutorials/${tutorialId}`)\n      .then(response => {\n        console.log(response.data)\n        this.fetchTutorials();\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  render() {\n    const { tutorials } = this.state;\n    return (\n      <React.Fragment >\n        <h1> My Tutorials </h1>\n        {\n          tutorials ?\n\n            <ul>\n              {tutorials.map(({ _id, tutorial_title }) => {\n                return (\n                  <React.Fragment>\n                    <Link to={`/tutorials/${_id}`} key={_id}>\n                      <li key={_id}>\n                        {tutorial_title}\n                      </li>\n                    </Link>\n                    <div onClick={() => this.deleteTutorial(_id)}>[Delete this tutorial]</div>\n                  </React.Fragment>\n                )\n              })}\n            </ul>\n            : 'Loading ...'\n\n        }\n      </React.Fragment>\n    )\n  }\n}\n\nexport default TutorialsList;","import React, { Component } from 'react'\nimport Axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nexport default class ShowTutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tutorial: {},\n      steps: []\n    }\n  }\n\n  componentDidMount() {\n    const tutorialId = this.props.match.params.id;\n    this.fetchTutorial(tutorialId);\n    this.fetchSteps(tutorialId);\n  }\n\n  fetchTutorial(tutorialId) {\n    Axios.get(`api/tutorials/${tutorialId}`)\n      .then(response => {\n        this.setState({ tutorial: response.data })\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  fetchSteps(tutorialId) {\n    Axios.get(`api/tutorials/${tutorialId}/steps`)\n      .then(response => {\n        this.setState({ steps: response.data })\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  deleteStep(stepId) {\n    Axios.delete(`api/steps/${stepId}`)\n      .then(response => {\n        console.log(response.data)\n        this.fetchSteps(this.props.match.params.id);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  renderSteps() {\n    return (\n      this.state.steps.map(({ _id, step_description, step_media }) => {\n        return (\n          <div className=\"step\" key={_id}>\n            {step_description}\n            <img src={step_media} alt={step_description} />\n            <p onClick={() => this.deleteStep(_id)}>Delete this step</p>\n          </div>\n        )\n      })\n    )\n  }\n\n  render() {\n    const { tutorial } = this.state\n    return (\n      <div>\n        <h1>{tutorial.tutorial_title}</h1>\n        <h2>Steps</h2>\n        <Link to={`/tutorials/${tutorial._id}/steps/new`}>Add a step</Link>\n        <div className=\"steps\">\n          {this.renderSteps()}\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { BrowserRouter as Link } from \"react-router-dom\";\nimport Axios from 'axios';\n\nexport default class CreateStep extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      step_description: '',\n      step_media: ''\n    }\n  }\n\n  onChangeStepDescription = (e) => {\n    this.setState({ step_description: e.target.value })\n  };\n\n  onChangeStepMedia = (e) => {\n    this.setState({ step_media: e.target.value })\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const tutorialID = this.props.match.params.id;\n    console.log(tutorialID);\n    const newStep = {\n      step_description: this.state.step_description,\n      step_media: this.state.step_media,\n    };\n\n    Axios.post(`api/tutorials/${tutorialID}/steps/create`, newStep)\n      .then(res => {\n        console.log(res)\n        window.location.href = `/tutorials/${tutorialID}`\n      })\n      .catch(err => console.log(err))\n  }\n\n\n  render() {\n    return (\n      <div>\n        <h2>Create a new tutorial</h2>\n        <form onSubmit={this.onSubmit}>\n          <input\n            type='text'\n            placeholder=\"Enter a description for this step\"\n            onChange={this.onChangeStepDescription}\n            value={this.state.step_description}\n          />\n          <input\n            type='text'\n            placeholder='Enter the URL of your media'\n            onChange={this.onChangeStepMedia}\n            value={this.state.step_media}\n          />\n          <input type='submit' />\n        </form>\n      </div>\n\n    )\n  }\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport './App.css';\n\nimport Navbar from './components/navbar';\nimport CreateTutorial from './components/create_tutorial.component';\nimport TutorialsList from './components/tutorials_list.component';\nimport ShowTutorial from './components/show_tutorial.component';\nimport CreateStep from './components/create_step.component';\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <div className=\"container\">\n        <Route path=\"/\" exact component={TutorialsList} />\n        <Route path=\"/tutorials/:id\" exact component={ShowTutorial} />\n        <Route path=\"/tutorials/new\" exact component={CreateTutorial} />\n        {/* <Route path=\"/:id/edit\" component={EditTutorial} */\n        <Route path=\"/tutorials/:id/steps/new\" component={CreateStep} />}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}