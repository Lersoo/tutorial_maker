{"version":3,"sources":["utils/colors.js","components/Navbar.jsx","utils/API.js","components/Tutorials/CreateTutorial.jsx","components/Tutorials/Tutorial.jsx","components/Tutorials/TutorialsList.jsx","components/Steps/Step.jsx","components/Tutorials/ShowTutorial.jsx","components/Steps/CreateStep.jsx","App.jsx","serviceWorker.js","index.js"],"names":["apricot","Wrapper","styled","section","Title","h1","NavbarLink","Link","Navbar","renderNewStepLink","to","path","this","Component","tutorialId","Axios","get","stepId","delete","tutorialID","newStep","post","newTutorial","CreateTutorial","props","onChangeTutorialTitle","e","setState","tutorial_title","target","value","onSubmit","preventDefault","state","API","then","res","newTutorialId","data","_id","window","location","pathname","catch","err","console","log","tutorial_steps","type","placeholder","onChange","TutorialLink","Tutorial","deleteTutorial","key","onClick","TutorialsList","fetchTutorials","response","tutorials","error","Fragment","map","Step","step_description","step_media","deleteStep","src","alt","ShowTutorial","fetchTutorial","tutorial","fetchSteps","steps","match","params","id","alert","className","renderSteps","CreateStep","onChangeStepDescription","onChangeStepMedia","href","App","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"yRAAaA,EAAU,yB,8dCMvB,IAAMC,EAAUC,IAAOC,QAAV,IDFY,0BCUnBC,EAAQF,IAAOG,GAAV,KAILC,EAAaJ,YAAOK,IAAPL,CAAH,IAGLF,GAOUQ,E,4MACnBC,kBAAoB,WAClB,OACE,kBAAC,IAAD,CAAMC,GAAG,4BAAT,e,uDAKF,OACE,kBAACT,EAAD,KACE,kBAACK,EAAD,CAAYI,GAAG,KACb,kBAACN,EAAD,wBAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOO,KAAK,KACV,kBAACL,EAAD,CAAYI,GAAG,kBAAf,wBAEF,kBAAC,IAAD,CAAOC,KAAK,kBACV,kBAACL,EAAD,CAAYI,GAAG,KAAf,UACA,kBAACJ,EAAD,CAAYI,GAAG,kBAAf,uBACA,kBAACJ,EAAD,CAAYI,GAAG,IAAIE,KAAKH,4B,GApBAI,a,iBC1BrB,EACE,SAAUC,GACvB,OAAOC,IAAMC,IAAN,yBAA4BF,KAFxB,EAID,SAAUA,GACpB,OAAOC,IAAMC,IAAN,yBAA4BF,EAA5B,YALI,EAOD,SAAUG,GACpB,OAAOF,IAAMG,OAAN,qBAA2BD,KARvB,EAUG,WACd,OAAOF,IAAMC,IAAI,oBAXN,EAaG,SAAUF,GACxB,OAAOC,IAAMG,OAAN,yBAA+BJ,KAd3B,EAgBD,SAAUK,EAAYC,GAChC,OAAOL,IAAMM,KAAN,yBAA6BF,EAA7B,iBAAwDC,IAjBpD,EAmBG,SAAUE,GACxB,OAAOP,IAAMM,KAAK,wBAAyBC,ICnB1BC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAQRC,sBAAwB,SAACC,GACvB,EAAKC,SAAS,CAAEC,eAAgBF,EAAEG,OAAOC,SAVxB,EAanBC,SAAW,SAACL,GACVA,EAAEM,iBAEF,IAAMV,EAAc,CAAEM,eAAgB,EAAKK,MAAML,gBACjDM,EAAmBZ,GAChBa,MAAK,SAACC,GACL,IAAMC,EAAgBD,EAAIE,KAAKC,IAC/BC,OAAOC,SAASC,SAAhB,qBAAyCL,MAE1CM,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAnB5B,EAAKX,MAAQ,CACXL,eAAgB,GAChBmB,eAAgB,IALD,E,qDA2BjB,OACE,6BACE,qDACA,0BAAMhB,SAAUnB,KAAKmB,UACnB,2BACEiB,KAAK,OACLC,YAAY,iCACZC,SAAUtC,KAAKa,sBACfK,MAAOlB,KAAKqB,MAAML,iBAEpB,2BAAOoB,KAAK,iB,GAtCsBnC,a,sXCG5C,IAAMZ,EAAUC,IAAOC,QAAV,IJJW,0BIWlBgD,EAAejD,YAAOK,IAAPL,CAAH,KAwBHkD,E,uKAbH,IAAD,EACyCxC,KAAKY,MAA7Ce,EADD,EACCA,IAAKX,EADN,EACMA,eAAgByB,EADtB,EACsBA,eAC7B,OACE,kBAAC,EAAD,CAASC,IAAKf,GACZ,kBAACY,EAAD,CAAczC,GAAE,qBAAgB6B,IAC7BX,GAEH,kBAACuB,EAAD,CAAcI,QAAS,kBAAMF,EAAed,KAA5C,6B,GARe1B,aC+BR2C,E,kDAjDb,WAAYhC,GAAQ,IAAD,8BACjB,cAAMA,IAURiC,eAAiB,WACfvB,IACGC,MAAK,SAAAuB,GACJb,QAAQC,IAAIY,EAASpB,MACrB,EAAKX,SAAS,CAAEgC,UAAWD,EAASpB,UAErCK,OAAM,SAAUiB,GACff,QAAQC,IAAIc,OAlBC,EAsBnBP,eAAiB,SAACvC,GAChBoB,EAAmBpB,GAChBqB,MAAK,SAAAuB,GACJb,QAAQC,IAAIY,EAASpB,MACrB,EAAKmB,oBAENd,OAAM,SAAUiB,GACff,QAAQC,IAAIc,OA3BhB,EAAK3B,MAAQ,CACX0B,UAAW,IAHI,E,gEAQjB/C,KAAK6C,mB,+BAyBG,IAAD,OACCE,EAAc/C,KAAKqB,MAAnB0B,UACR,OACE,kBAAC,IAAME,SAAP,KACE,8CACCF,EAAUG,KAAI,YAA8B,IAA3BvB,EAA0B,EAA1BA,IAAKX,EAAqB,EAArBA,eACrB,OACE,kBAAC,EAAD,CAAU0B,IAAKf,EAAKA,IAAKA,EAAKX,eAAgBA,EAAgByB,eAAgB,EAAKA,yB,GAzCnExC,a,oJCD5B,IAAMZ,EAAUC,IAAOC,QAAV,KAmBE4D,E,uKAZH,IAAD,EACkDnD,KAAKY,MAAvDe,EADA,EACAA,IAAKyB,EADL,EACKA,iBAAkBC,EADvB,EACuBA,WAAYC,EADnC,EACmCA,WAC1C,OACE,kBAAC,EAAD,KACGF,EACD,yBAAKG,IAAKF,EAAYG,IAAKJ,IAC3B,uBAAGT,QAAS,kBAAMW,EAAW3B,KAA7B,yB,GAPW1B,aCHEwD,E,kDACnB,WAAY7C,GAAQ,IAAD,8BACjB,cAAMA,IAaR8C,cAAgB,SAACxD,GACfoB,EAAkBpB,GACfqB,MAAK,SAAAuB,GACJb,QAAQC,IAAIY,GACZ,EAAK/B,SAAS,CAAE4C,SAAUb,EAASpB,UAEpCK,OAAM,SAAUiB,GACff,QAAQC,IAAIc,OArBC,EAyBnBY,WAAa,SAAC1D,GACZoB,EAAepB,GACZqB,MAAK,SAAAuB,GACJb,QAAQC,IAAIY,EAASpB,MACrB,EAAKX,SAAS,CAAE8C,MAAOf,EAASpB,UAEjCK,OAAM,SAAUiB,GACff,QAAQC,IAAIc,OAhCC,EAoCnBM,WAAa,SAACjD,GACZiB,EAAejB,GACZkB,MAAK,SAAAuB,GACJb,QAAQC,IAAIY,EAASpB,MACrB,EAAKkC,WAAW,EAAKhD,MAAMkD,MAAMC,OAAOC,OAEzCjC,OAAM,SAAUiB,GACff,QAAQC,IAAIc,OA3CC,EA+CnBP,eAAiB,SAACvC,GAChBoB,EAAmBpB,GAChBqB,MAAK,SAAAuB,GACJmB,MAAMnB,EAASpB,MACfE,OAAOC,SAASC,SAAW,OAE5BC,OAAM,SAAUiB,GACff,QAAQC,IAAIc,OApDhB,EAAK3B,MAAQ,CACXsC,SAAU,GACVE,MAAO,IAJQ,E,gEASjB,IAAM3D,EAAaF,KAAKY,MAAMkD,MAAMC,OAAOC,GAC3ChE,KAAK0D,cAAcxD,GACnBF,KAAK4D,WAAW1D,K,oCA+CH,IAAD,OAEZ,OADA+B,QAAQC,IAAIlC,KAAKqB,MAAMwC,OAErB7D,KAAKqB,MAAMwC,MAAMX,KAAI,YAA4C,IAAzCvB,EAAwC,EAAxCA,IAAKyB,EAAmC,EAAnCA,iBAAkBC,EAAiB,EAAjBA,WAC7C,OACE,kBAAC,EAAD,CACEX,IAAKf,EACLA,IAAKA,EACLyB,iBAAkBA,EAClBC,WAAYA,EACZC,WAAY,EAAKA,kB,+BAOjB,IAAD,OACCK,EAAc3D,KAAKqB,MAAnBsC,SACR,OACE,6BACE,4BAAKA,EAAS3C,gBACd,qCACA,kBAAC,IAAD,CAAMlB,GAAE,qBAAgB6D,EAAShC,IAAzB,eAAR,cACA,kBAAC,IAAD,CAAMgB,QAAS,kBAAM,EAAKF,eAAekB,EAAShC,OAAlD,wBACA,yBAAKuC,UAAU,SACZlE,KAAKmE,oB,GArF0BlE,aCHrBmE,E,kDACnB,WAAYxD,GAAQ,IAAD,8BACjB,cAAMA,IAQRyD,wBAA0B,SAACvD,GACzB,EAAKC,SAAS,CAAEqC,iBAAkBtC,EAAEG,OAAOC,SAV1B,EAanBoD,kBAAoB,SAACxD,GACnB,EAAKC,SAAS,CAAEsC,WAAYvC,EAAEG,OAAOC,SAdpB,EAiBnBC,SAAW,SAACL,GACVA,EAAEM,iBACF,IAAMb,EAAa,EAAKK,MAAMkD,MAAMC,OAAOC,GAErCxD,EAAU,CACd4C,iBAAkB,EAAK/B,MAAM+B,iBAC7BC,WAAY,EAAKhC,MAAMgC,YAGzB/B,EAAef,EAAYC,GACxBe,MAAK,SAAAC,GACJS,QAAQC,IAAIV,GACZI,OAAOC,SAAS0C,KAAhB,qBAAqChE,MAEtCwB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OA5B5B,EAAKX,MAAQ,CACX+B,iBAAkB,GAClBC,WAAY,IALG,E,qDAoCjB,OACE,6BACE,qDACA,0BAAMlC,SAAUnB,KAAKmB,UACnB,2BACEiB,KAAK,OACLC,YAAY,oCACZC,SAAUtC,KAAKqE,wBACfnD,MAAOlB,KAAKqB,MAAM+B,mBAEpB,2BACEhB,KAAK,OACLC,YAAY,8BACZC,SAAUtC,KAAKsE,kBACfpD,MAAOlB,KAAKqB,MAAMgC,aAEpB,2BAAOjB,KAAK,iB,GArDkBnC,a,4HCSxC,IAAMZ,EAAUC,IAAOC,QAAV,ITTa,yBSYfH,GAkBIoF,MAhBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOzE,KAAK,IAAI0E,OAAK,EAACC,UAAW9B,IACjC,kBAAC,IAAD,CAAO7C,KAAK,iBAAiB0E,OAAK,EAACC,UAAW/D,IAC9C,kBAAC,IAAD,CAAOZ,KAAK,2BAA2B2E,UAAWN,IAClD,kBAAC,IAAD,CAAOrE,KAAK,iBAAiB0E,OAAK,EAACC,UAAWjB,QCdpCkB,QACW,cAA7B/C,OAAOC,SAAS+C,UAEe,UAA7BhD,OAAOC,SAAS+C,UAEhBhD,OAAOC,SAAS+C,SAASd,MACvB,2DCZNe,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7D,MAAK,SAAA8D,GACJA,EAAaC,gBAEdvD,OAAM,SAAAiB,GACLf,QAAQe,MAAMA,EAAMuC,c","file":"static/js/main.7efaae30.chunk.js","sourcesContent":["export const apricot = 'rgba(255, 202, 177, 1)'\nexport const blueGray = 'rgba(100, 94, 157, 1)';\nexport const seaGreen = 'rgba(156, 198, 155, 1)';\nexport const greenSheen = 'rgba(121, 180, 169, 1)';\nexport const cadetBlue = 'rgba(105, 162, 176, 1)';\n","import React, { Component } from 'react'\nimport { Link, Switch, Route } from 'react-router-dom'\nimport styled from 'styled-components';\n\nimport { blueGray, apricot, cadetBlue } from '../utils/colors';\n\nconst Wrapper = styled.section`\n  padding: 0 20em;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: ${cadetBlue};\n`\n\nconst Title = styled.h1`\n\n`\n\nconst NavbarLink = styled(Link)`\n  padding: 1em;\n  text-decoration: none;\n  color: ${apricot};\n  transition: transform 0.4s ease;\n  &:hover {\n    transform: scale(1.1);\n  }\n`\n\nexport default class Navbar extends Component {\n  renderNewStepLink = () => {\n    return (\n      <Link to='/tutorials/:id/steps/new'>Add a step</Link>\n    )\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <NavbarLink to='/'>\n          <Title>Tutorial Maker</Title>\n        </NavbarLink>\n        <Switch>\n          <Route path='/'>\n            <NavbarLink to='/tutorials/new'> Create a Tutorial </NavbarLink>\n          </Route>\n          <Route path='/tutorials/:id'>\n            <NavbarLink to='/'> Home </NavbarLink>\n            <NavbarLink to='/tutorials/new'> Create a Tutorial </NavbarLink>\n            <NavbarLink to=''>{this.renderNewStepLink()}</NavbarLink>\n          </Route>\n        </Switch>\n      </Wrapper>\n    )\n  }\n}\n","import Axios from 'axios';\n\nexport default {\n  fetchTutorial: function (tutorialId) {\n    return Axios.get(`/api/tutorials/${tutorialId}`);\n  },\n  fetchSteps: function (tutorialId) {\n    return Axios.get(`/api/tutorials/${tutorialId}/steps`);\n  },\n  deleteStep: function (stepId) {\n    return Axios.delete(`/api/steps/${stepId}`);\n  },\n  fetchTutorials: function () {\n    return Axios.get('/api/tutorials/');\n  },\n  deleteTutorial: function (tutorialId) {\n    return Axios.delete(`/api/tutorials/${tutorialId}`);\n  },\n  createStep: function (tutorialID, newStep) {\n    return Axios.post(`/api/tutorials/${tutorialID}/steps/create`, newStep);\n  },\n  createTutorial: function (newTutorial) {\n    return Axios.post('/api/tutorials/create', newTutorial);\n  }\n}","import React, { Component } from 'react'\nimport API from '../../utils/API';\n\nexport default class CreateTutorial extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tutorial_title: '',\n      tutorial_steps: []\n    }\n  }\n\n  onChangeTutorialTitle = (e) => {\n    this.setState({ tutorial_title: e.target.value })\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const newTutorial = { tutorial_title: this.state.tutorial_title };\n    API.createTutorial(newTutorial)\n      .then((res) => {\n        const newTutorialId = res.data._id;\n        window.location.pathname = `/tutorials/${newTutorialId}`;\n      })\n      .catch(err => console.log(err))\n\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Create a new tutorial</h2>\n        <form onSubmit={this.onSubmit}>\n          <input\n            type='text'\n            placeholder=\"Enter a name for your tutorial\"\n            onChange={this.onChangeTutorialTitle}\n            value={this.state.tutorial_title}\n          />\n          <input type='submit' />\n        </form>\n      </div>\n\n    )\n  }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { seaGreen } from '../../utils/colors';\n\nconst Wrapper = styled.section`\n  display: flex;\n  padding: 4em;\n  background: ${seaGreen};\n  justify-content: space-between;\n`;\n\nconst TutorialLink = styled(Link)`\n  text-decoration: none;\n  transition: transform 0.3s ease;\n  color: black;\n  &:hover {\n    transform: scale(1.2);\n    color: red;\n  }\n`\n\nclass Tutorial extends Component {\n  render() {\n    const { _id, tutorial_title, deleteTutorial } = this.props;\n    return (\n      <Wrapper key={_id} >\n        <TutorialLink to={`/tutorials/${_id}`}>\n          {tutorial_title}\n        </TutorialLink>\n        <TutorialLink onClick={() => deleteTutorial(_id)}>Delete this tutorial</TutorialLink>\n      </Wrapper>\n    )\n  }\n}\n\nexport default Tutorial;","import React, { Component } from 'react';\nimport API from '../../utils/API';\nimport Tutorial from './Tutorial'\n\nclass TutorialsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tutorials: []\n    }\n  }\n\n  componentDidMount() {\n    this.fetchTutorials();\n  }\n\n  fetchTutorials = () => {\n    API.fetchTutorials()\n      .then(response => {\n        console.log(response.data)\n        this.setState({ tutorials: response.data })\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  deleteTutorial = (tutorialId) => {\n    API.deleteTutorial(tutorialId)\n      .then(response => {\n        console.log(response.data)\n        this.fetchTutorials();\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  render() {\n    const { tutorials } = this.state;\n    return (\n      <React.Fragment >\n        <h1> My Tutorials </h1>\n        {tutorials.map(({ _id, tutorial_title }) => {\n          return (\n            <Tutorial key={_id} _id={_id} tutorial_title={tutorial_title} deleteTutorial={this.deleteTutorial} />\n          )\n        })\n        }\n      </React.Fragment>\n    )\n  }\n}\n\nexport default TutorialsList;","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.section`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nclass Step extends Component {\n  render() {\n    const {_id, step_description, step_media, deleteStep } = this.props\n    return (\n      <Wrapper>\n        {step_description}\n        <img src={step_media} alt={step_description} />\n        <p onClick={() => deleteStep(_id)}>Delete this step</p>\n      </Wrapper>\n    )\n  }\n}\n\nexport default Step;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport API from '../../utils/API';\n\nimport Step from '../Steps/Step';\n\nexport default class ShowTutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tutorial: {},\n      steps: []\n    }\n  }\n\n  componentDidMount() {\n    const tutorialId = this.props.match.params.id;\n    this.fetchTutorial(tutorialId);\n    this.fetchSteps(tutorialId);\n  }\n\n  fetchTutorial = (tutorialId) => {\n    API.fetchTutorial(tutorialId)\n      .then(response => {\n        console.log(response);\n        this.setState({ tutorial: response.data });\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  fetchSteps = (tutorialId) => {\n    API.fetchSteps(tutorialId)\n      .then(response => {\n        console.log(response.data);\n        this.setState({ steps: response.data })\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  deleteStep = (stepId) => {\n    API.deleteStep(stepId)\n      .then(response => {\n        console.log(response.data)\n        this.fetchSteps(this.props.match.params.id);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  deleteTutorial = (tutorialId) => {\n    API.deleteTutorial(tutorialId)\n      .then(response => {\n        alert(response.data)\n        window.location.pathname = '/';\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  renderSteps() {\n    console.log(this.state.steps)\n    return (\n      this.state.steps.map(({ _id, step_description, step_media }) => {\n        return (\n          <Step\n            key={_id}\n            _id={_id}\n            step_description={step_description}\n            step_media={step_media}\n            deleteStep={this.deleteStep}\n          />\n        )\n      })\n    )\n  }\n\n  render() {\n    const { tutorial, } = this.state\n    return (\n      <div>\n        <h1>{tutorial.tutorial_title}</h1>\n        <h2>Steps</h2>\n        <Link to={`/tutorials/${tutorial._id}/steps/new`}>Add a step</Link>\n        <Link onClick={() => this.deleteTutorial(tutorial._id)}>Delete this tutorial</Link>\n        <div className=\"steps\">\n          {this.renderSteps()}\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport API from '../../utils/API';\n\nexport default class CreateStep extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      step_description: '',\n      step_media: ''\n    }\n  }\n\n  onChangeStepDescription = (e) => {\n    this.setState({ step_description: e.target.value })\n  };\n\n  onChangeStepMedia = (e) => {\n    this.setState({ step_media: e.target.value })\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const tutorialID = this.props.match.params.id;\n\n    const newStep = {\n      step_description: this.state.step_description,\n      step_media: this.state.step_media,\n    };\n\n    API.createStep(tutorialID, newStep)\n      .then(res => {\n        console.log(res)\n        window.location.href = `/tutorials/${tutorialID}`\n      })\n      .catch(err => console.log(err))\n  }\n\n\n  render() {\n    return (\n      <div>\n        <h2>Create a new tutorial</h2>\n        <form onSubmit={this.onSubmit}>\n          <input\n            type='text'\n            placeholder=\"Enter a description for this step\"\n            onChange={this.onChangeStepDescription}\n            value={this.state.step_description}\n          />\n          <input\n            type='text'\n            placeholder='Enter the URL of your media'\n            onChange={this.onChangeStepMedia}\n            value={this.state.step_media}\n          />\n          <input type='submit' />\n        </form>\n      </div>\n\n    )\n  }\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport styled from 'styled-components';\n\nimport Navbar from './components/Navbar';\nimport CreateTutorial from './components/Tutorials/CreateTutorial';\nimport TutorialsList from './components/Tutorials/TutorialsList';\nimport ShowTutorial from './components/Tutorials/ShowTutorial';\nimport CreateStep from './components/Steps/CreateStep';\n\nimport { greenSheen, apricot } from './utils/colors';\n\nconst Wrapper = styled.section`\n  padding: 0 30%;\n  background: ${greenSheen};\n  color: ${apricot}\n`\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Wrapper>\n        <Switch>\n          <Route path=\"/\" exact component={TutorialsList} />\n          <Route path=\"/tutorials/new\" exact component={CreateTutorial} />\n          <Route path=\"/tutorials/:id/steps/new\" component={CreateStep} />\n          <Route path=\"/tutorials/:id\" exact component={ShowTutorial} />\n        </Switch>\n      </Wrapper>\n    </Router>\n  );\n}\n\nexport default App;\n\n//<Route path=\"/:id/edit\" component={EditTutorial} />\n\n\n// TUTORIAL -- https://medium.com/crowdbotics/deploy-a-mern-stack-app-on-heroku-b0c255744a70","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}