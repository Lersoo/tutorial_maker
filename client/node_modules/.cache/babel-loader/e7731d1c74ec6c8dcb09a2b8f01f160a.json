{"ast":null,"code":"/**\n * Returns an ensureOption function that relies on the provided `defaultOptions` argument\n * for default values.\n * @private\n * @param {object} defaultOptions\n * @return {function(*, *, *=): *}\n */\nfunction defaults(defaultOptions) {\n  return function ensureOption(options, name, defaultValue) {\n    let value = options[name] || defaultOptions[name] || defaultValue;\n\n    if (value === undefined) {\n      throw `Must supply ${name}`;\n    }\n\n    return value;\n  };\n}\n/**\n * Get the option `name` from options, the global config, or the default value.\n * If the value is not defined and no default value was provided,\n * the method will throw an error.\n * @private\n * @param {object} options\n * @param {string} name\n * @param {*} [defaultValue]\n * @return {*} the value associated with the provided `name` or the default.\n *\n */\n\n\nmodule.exports = defaults({});\nmodule.exports.defaults = defaults;","map":{"version":3,"sources":["/home/thomas/code/Lersoo/tutorial_maker/client/node_modules/cloudinary/lib/utils/ensureOption.js"],"names":["defaults","defaultOptions","ensureOption","options","name","defaultValue","value","undefined","module","exports"],"mappings":"AAAA;;;;;;;AAOA,SAASA,QAAT,CAAkBC,cAAlB,EAAkC;AAChC,SAAO,SAASC,YAAT,CAAsBC,OAAtB,EAA+BC,IAA/B,EAAqCC,YAArC,EAAmD;AACxD,QAAIC,KAAK,GAAGH,OAAO,CAACC,IAAD,CAAP,IAAiBH,cAAc,CAACG,IAAD,CAA/B,IAAyCC,YAArD;;AACA,QAAIC,KAAK,KAAKC,SAAd,EAAyB;AACvB,YAAO,eAAcH,IAAK,EAA1B;AACD;;AACD,WAAOE,KAAP;AACD,GAND;AAOD;AAED;;;;;;;;;;;;;AAWAE,MAAM,CAACC,OAAP,GAAiBT,QAAQ,CAAC,EAAD,CAAzB;AAEAQ,MAAM,CAACC,OAAP,CAAeT,QAAf,GAA0BA,QAA1B","sourcesContent":["/**\n * Returns an ensureOption function that relies on the provided `defaultOptions` argument\n * for default values.\n * @private\n * @param {object} defaultOptions\n * @return {function(*, *, *=): *}\n */\nfunction defaults(defaultOptions) {\n  return function ensureOption(options, name, defaultValue) {\n    let value = options[name] || defaultOptions[name] || defaultValue;\n    if (value === undefined) {\n      throw `Must supply ${name}`;\n    }\n    return value;\n  };\n}\n\n/**\n * Get the option `name` from options, the global config, or the default value.\n * If the value is not defined and no default value was provided,\n * the method will throw an error.\n * @private\n * @param {object} options\n * @param {string} name\n * @param {*} [defaultValue]\n * @return {*} the value associated with the provided `name` or the default.\n *\n */\nmodule.exports = defaults({});\n\nmodule.exports.defaults = defaults;\n"]},"metadata":{},"sourceType":"script"}