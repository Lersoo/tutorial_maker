{"ast":null,"code":"/**\n * Utilities\n * @module utils\n * @borrows module:auth_token as generate_auth_token\n */\nconst crypto = require(\"crypto\");\n\nconst querystring = require(\"querystring\");\n\nconst urlParse = require(\"url\").parse; // Functions used internally\n\n\nconst compact = require(\"lodash/compact\");\n\nconst first = require(\"lodash/first\");\n\nconst isFunction = require(\"lodash/isFunction\");\n\nconst isPlainObject = require(\"lodash/isPlainObject\");\n\nconst last = require(\"lodash/last\");\n\nconst map = require(\"lodash/map\");\n\nconst take = require(\"lodash/take\");\n\nconst at = require(\"lodash/at\"); // Exposed by the module\n\n\nconst clone = require(\"lodash/clone\");\n\nconst extend = require(\"lodash/extend\");\n\nconst filter = require(\"lodash/filter\");\n\nconst includes = require(\"lodash/includes\");\n\nconst isArray = require(\"lodash/isArray\");\n\nconst isEmpty = require(\"lodash/isEmpty\");\n\nconst isNumber = require(\"lodash/isNumber\");\n\nconst isObject = require(\"lodash/isObject\");\n\nconst isString = require(\"lodash/isString\");\n\nconst isUndefined = require(\"lodash/isUndefined\");\n\nconst smart_escape = require(\"./encoding/smart_escape\");\n\nconst consumeOption = require('./parsing/consumeOption');\n\nconst toArray = require('./parsing/toArray');\n\nlet {\n  base64EncodeURL\n} = require('./encoding/base64EncodeURL');\n\nconst encodeDoubleArray = require('./encoding/encodeDoubleArray');\n\nconst config = require(\"../config\");\n\nconst generate_token = require(\"../auth_token\");\n\nconst utf8_encode = require('./utf8_encode');\n\nconst crc32 = require('./crc32');\n\nconst ensurePresenceOf = require('./ensurePresenceOf');\n\nconst ensureOption = require('./ensureOption').defaults(config());\n\nconst entries = require('./entries');\n\nconst isRemoteUrl = require('./isRemoteUrl');\n\nexports = module.exports;\nconst utils = module.exports;\n\ntry {\n  // eslint-disable-next-line global-require\n  utils.VERSION = require('../../package.json').version;\n} catch (error) {\n  utils.VERSION = '';\n}\n\nfunction generate_auth_token(options) {\n  let token_options = Object.assign({}, config().auth_token, options);\n  return generate_token(token_options);\n}\n\nexports.CF_SHARED_CDN = \"d3jpl91pxevbkh.cloudfront.net\";\nexports.OLD_AKAMAI_SHARED_CDN = \"cloudinary-a.akamaihd.net\";\nexports.AKAMAI_SHARED_CDN = \"res.cloudinary.com\";\nexports.SHARED_CDN = exports.AKAMAI_SHARED_CDN;\nexports.USER_AGENT = `CloudinaryNodeJS/${exports.VERSION}`; // Add platform information to the USER_AGENT header\n// This is intended for platform information and not individual applications!\n\nexports.userPlatform = \"\";\n\nfunction getUserAgent() {\n  return isEmpty(utils.userPlatform) ? `${utils.USER_AGENT}` : `${utils.userPlatform} ${utils.USER_AGENT}`;\n}\n\nconst {\n  DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION,\n  DEFAULT_POSTER_OPTIONS,\n  DEFAULT_VIDEO_SOURCE_TYPES,\n  CONDITIONAL_OPERATORS,\n  PREDEFINED_VARS,\n  LAYER_KEYWORD_PARAMS,\n  TRANSFORMATION_PARAMS,\n  SIMPLE_PARAMS\n} = require('./consts');\n\nfunction textStyle(layer) {\n  let keywords = [];\n  let style = \"\";\n  Object.keys(LAYER_KEYWORD_PARAMS).forEach(attr => {\n    let default_value = LAYER_KEYWORD_PARAMS[attr];\n    let attr_value = layer[attr] || default_value;\n\n    if (attr_value !== default_value) {\n      keywords.push(attr_value);\n    }\n  });\n  Object.keys(layer).forEach(attr => {\n    if (attr === \"letter_spacing\" || attr === \"line_spacing\") {\n      keywords.push(`${attr}_${layer[attr]}`);\n    }\n\n    if (attr === \"font_hinting\") {\n      keywords.push(`${attr.split(\"_\").pop()}_${layer[attr]}`);\n    }\n\n    if (attr === \"font_antialiasing\") {\n      keywords.push(`antialias_${layer[attr]}`);\n    }\n  });\n\n  if (layer.hasOwnProperty(\"font_size\" || \"font_family\") || !isEmpty(keywords)) {\n    if (!layer.font_size) throw `Must supply font_size for text in overlay/underlay`;\n    if (!layer.font_family) throw `Must supply font_family for text in overlay/underlay`;\n    keywords.unshift(layer.font_size);\n    keywords.unshift(layer.font_family);\n    style = compact(keywords).join(\"_\");\n  }\n\n  return style;\n}\n/**\n * Normalize an offset value\n * @param {String} expression a decimal value which may have a 'p' or '%' postfix. E.g. '35%', '0.4p'\n * @return {Object|String} a normalized String of the input value if possible otherwise the value itself\n */\n\n\nfunction normalize_expression(expression) {\n  if (!isString(expression) || expression.length === 0 || expression.match(/^!.+!$/)) {\n    return expression;\n  }\n\n  const operators = \"\\\\|\\\\||>=|<=|&&|!=|>|=|<|/|-|\\\\+|\\\\*\";\n  const pattern = \"((\" + operators + \")(?=[ _])|\" + Object.keys(PREDEFINED_VARS).join(\"|\") + \")\";\n  const replaceRE = new RegExp(pattern, \"g\");\n  expression = expression.replace(replaceRE, function (match) {\n    return CONDITIONAL_OPERATORS[match] || PREDEFINED_VARS[match];\n  });\n  return expression.replace(/[ _]+/g, '_');\n}\n/**\n * Parse custom_function options\n * @private\n * @param {object|*} customFunction a custom function object containing function_type and source values\n * @return {string|*} custom_function transformation string\n */\n\n\nfunction process_custom_function(customFunction) {\n  if (!isObject(customFunction)) {\n    return customFunction;\n  }\n\n  if (customFunction.function_type === \"remote\") {\n    return [customFunction.function_type, base64EncodeURL(customFunction.source)].join(\":\");\n  }\n\n  return [customFunction.function_type, customFunction.source].join(\":\");\n}\n/**\n * Parse custom_pre_function options\n * @private\n * @param {object|*} customPreFunction a custom function object containing function_type and source values\n * @return {string|*} custom_pre_function transformation string\n */\n\n\nfunction process_custom_pre_function(customPreFunction) {\n  let result = process_custom_function(customPreFunction);\n  return utils.isString(result) ? `pre:${result}` : null;\n}\n/**\n * Parse \"if\" parameter\n * Translates the condition if provided.\n * @private\n * @return {string} \"if_\" + ifValue\n */\n\n\nfunction process_if(ifValue) {\n  return ifValue ? \"if_\" + normalize_expression(ifValue) : ifValue;\n}\n/**\n * Parse layer options\n * @private\n * @param {object|*} layer The layer to parse.\n * @return {string} layer transformation string\n */\n\n\nfunction process_layer(layer) {\n  let result = '';\n\n  if (isPlainObject(layer)) {\n    if (layer.resource_type === \"fetch\" || layer.url != null) {\n      result = `fetch:${base64EncodeURL(layer.url)}`;\n    } else {\n      let public_id = layer.public_id;\n      let format = layer.format;\n      let resource_type = layer.resource_type || \"image\";\n      let type = layer.type || \"upload\";\n      let text = layer.text;\n      let style = null;\n      let components = [];\n      const noPublicId = isEmpty(public_id);\n\n      if (!noPublicId) {\n        public_id = public_id.replace(new RegExp(\"/\", 'g'), \":\");\n\n        if (format != null) {\n          public_id = `${public_id}.${format}`;\n        }\n      }\n\n      if (isEmpty(text) && resource_type !== \"text\") {\n        if (noPublicId) {\n          throw \"Must supply public_id for resource_type layer_parameter\";\n        }\n\n        if (resource_type === \"subtitles\") {\n          style = textStyle(layer);\n        }\n      } else {\n        resource_type = \"text\";\n        type = null; // type is ignored for text layers\n\n        style = textStyle(layer);\n\n        if (!isEmpty(text)) {\n          const noStyle = isEmpty(style);\n\n          if (!(noPublicId || noStyle) || noPublicId && noStyle) {\n            throw \"Must supply either style parameters or a public_id when providing text parameter in a text overlay/underlay\";\n          }\n\n          let re = /\\$\\([a-zA-Z]\\w*\\)/g;\n          let start = 0;\n          let textSource = smart_escape(decodeURIComponent(text), /[,\\/]/g);\n          text = \"\";\n\n          for (let res = re.exec(textSource); res; res = re.exec(textSource)) {\n            text += smart_escape(textSource.slice(start, res.index));\n            text += res[0];\n            start = res.index + res[0].length;\n          }\n\n          text += encodeURIComponent(textSource.slice(start));\n        }\n      }\n\n      if (resource_type !== \"image\") {\n        components.push(resource_type);\n      }\n\n      if (type !== \"upload\") {\n        components.push(type);\n      }\n\n      components.push(style);\n      components.push(public_id);\n      components.push(text);\n      result = compact(components).join(\":\");\n    }\n  } else if (/^fetch:.+/.test(layer)) {\n    result = `fetch:${base64EncodeURL(layer.substr(6))}`;\n  } else {\n    result = layer;\n  }\n\n  return result;\n}\n/**\n * Parse radius options\n * @private\n * @param {Array<string|number>|string|number} radius The radius to parse\n * @return {string} radius transformation string\n */\n\n\nfunction process_radius(radius) {\n  if (!radius) {\n    return radius;\n  }\n\n  if (!isArray(radius)) {\n    radius = [radius];\n  }\n\n  if (radius.length === 0 || radius.length > 4) {\n    throw new Error(\"Radius array should contain between 1 and 4 values\");\n  }\n\n  if (radius.findIndex(x => x === null) >= 0) {\n    throw new Error(\"Corner: Cannot be null\");\n  }\n\n  return radius.map(normalize_expression).join(':');\n}\n\nfunction build_upload_params(options) {\n  let params = {\n    access_mode: options.access_mode,\n    allowed_formats: options.allowed_formats && toArray(options.allowed_formats).join(\",\"),\n    async: utils.as_safe_bool(options.async),\n    backup: utils.as_safe_bool(options.backup),\n    callback: options.callback,\n    colors: utils.as_safe_bool(options.colors),\n    discard_original_filename: utils.as_safe_bool(options.discard_original_filename),\n    eager: utils.build_eager(options.eager),\n    eager_async: utils.as_safe_bool(options.eager_async),\n    eager_notification_url: options.eager_notification_url,\n    exif: utils.as_safe_bool(options.exif),\n    faces: utils.as_safe_bool(options.faces),\n    folder: options.folder,\n    format: options.format,\n    image_metadata: utils.as_safe_bool(options.image_metadata),\n    invalidate: utils.as_safe_bool(options.invalidate),\n    moderation: options.moderation,\n    notification_url: options.notification_url,\n    overwrite: utils.as_safe_bool(options.overwrite),\n    phash: utils.as_safe_bool(options.phash),\n    proxy: options.proxy,\n    public_id: options.public_id,\n    quality_analysis: utils.as_safe_bool(options.quality_analysis),\n    responsive_breakpoints: utils.generate_responsive_breakpoints_string(options.responsive_breakpoints),\n    return_delete_token: utils.as_safe_bool(options.return_delete_token),\n    timestamp: options.timestamp || exports.timestamp(),\n    transformation: utils.generate_transformation_string(clone(options)),\n    type: options.type,\n    unique_filename: utils.as_safe_bool(options.unique_filename),\n    upload_preset: options.upload_preset,\n    use_filename: utils.as_safe_bool(options.use_filename),\n    quality_override: options.quality_override\n  };\n  return utils.updateable_resource_params(options, params);\n}\n\nfunction encode_key_value(arg) {\n  if (!isObject(arg)) {\n    return arg;\n  }\n\n  return entries(arg).map(([k, v]) => `${k}=${v}`).join('|');\n}\n\nfunction encode_context(arg) {\n  if (!isObject(arg)) {\n    return arg;\n  }\n\n  return entries(arg).map(([k, v]) => `${k}=${v.replace(/([=|])/g, '\\\\$&')}`).join('|');\n}\n\nfunction build_eager(transformations) {\n  return toArray(transformations).map(transformation => {\n    const transformationString = utils.generate_transformation_string(clone(transformation));\n    const format = transformation.format;\n    return format == null ? transformationString : `${transformationString}/${format}`;\n  }).join('|');\n}\n/**\n * Build the custom headers for the request\n * @private\n * @param headers\n * @return {Array<string>|object|string} An object of name and value,\n *         an array of header strings, or a string of headers\n */\n\n\nfunction build_custom_headers(headers) {\n  switch (true) {\n    case headers == null:\n      return void 0;\n\n    case isArray(headers):\n      return headers.join(\"\\n\");\n\n    case isObject(headers):\n      return entries(headers).map(([k, v]) => `${k}:${v}`).join(\"\\n\");\n\n    default:\n      return headers;\n  }\n}\n\nfunction generate_transformation_string(options) {\n  if (utils.isString(options)) {\n    return options;\n  }\n\n  if (isArray(options)) {\n    return options.map(t => utils.generate_transformation_string(clone(t))).filter(utils.present).join('/');\n  }\n\n  let responsive_width = consumeOption(options, \"responsive_width\", config().responsive_width);\n  let width = options.width;\n  let height = options.height;\n  let size = consumeOption(options, \"size\");\n\n  if (size) {\n    [width, height] = size.split(\"x\");\n    [options.width, options.height] = [width, height];\n  }\n\n  let has_layer = options.overlay || options.underlay;\n  let crop = consumeOption(options, \"crop\");\n  let angle = toArray(consumeOption(options, \"angle\")).join(\".\");\n  let no_html_sizes = has_layer || utils.present(angle) || crop === \"fit\" || crop === \"limit\" || responsive_width;\n\n  if (width && (width.toString().indexOf(\"auto\") === 0 || no_html_sizes || parseFloat(width) < 1)) {\n    delete options.width;\n  }\n\n  if (height && (no_html_sizes || parseFloat(height) < 1)) {\n    delete options.height;\n  }\n\n  let background = consumeOption(options, \"background\");\n  background = background && background.replace(/^#/, \"rgb:\");\n  let color = consumeOption(options, \"color\");\n  color = color && color.replace(/^#/, \"rgb:\");\n  let base_transformations = toArray(consumeOption(options, \"transformation\", []));\n  let named_transformation = [];\n\n  if (base_transformations.some(isObject)) {\n    base_transformations = base_transformations.map(tr => utils.generate_transformation_string(isObject(tr) ? clone(tr) : {\n      transformation: tr\n    }));\n  } else {\n    named_transformation = base_transformations.join(\".\");\n    base_transformations = [];\n  }\n\n  let effect = consumeOption(options, \"effect\");\n\n  if (isArray(effect)) {\n    effect = effect.join(\":\");\n  } else if (isObject(effect)) {\n    effect = entries(effect).map(([key, value]) => `${key}:${value}`);\n  }\n\n  let border = consumeOption(options, \"border\");\n\n  if (isObject(border)) {\n    border = `${border.width != null ? border.width : 2}px_solid_${(border.color != null ? border.color : \"black\").replace(/^#/, 'rgb:')}`;\n  } else if (/^\\d+$/.exec(border)) {\n    // fallback to html border attributes\n    options.border = border;\n    border = void 0;\n  }\n\n  let flags = toArray(consumeOption(options, \"flags\")).join(\".\");\n  let dpr = consumeOption(options, \"dpr\", config().dpr);\n\n  if (options.offset != null) {\n    [options.start_offset, options.end_offset] = split_range(consumeOption(options, \"offset\"));\n  }\n\n  let overlay = process_layer(consumeOption(options, \"overlay\"));\n  let radius = process_radius(consumeOption(options, \"radius\"));\n  let underlay = process_layer(consumeOption(options, \"underlay\"));\n  let ifValue = process_if(consumeOption(options, \"if\"));\n  let custom_function = process_custom_function(consumeOption(options, \"custom_function\"));\n  let custom_pre_function = process_custom_pre_function(consumeOption(options, \"custom_pre_function\"));\n  let fps = consumeOption(options, 'fps');\n\n  if (isArray(fps)) {\n    fps = fps.join('-');\n  }\n\n  let params = {\n    a: normalize_expression(angle),\n    ar: normalize_expression(consumeOption(options, \"aspect_ratio\")),\n    b: background,\n    bo: border,\n    c: crop,\n    co: color,\n    dpr: normalize_expression(dpr),\n    e: normalize_expression(effect),\n    fl: flags,\n    fn: custom_function || custom_pre_function,\n    fps: fps,\n    h: normalize_expression(height),\n    ki: normalize_expression(consumeOption(options, \"keyframe_interval\")),\n    l: overlay,\n    o: normalize_expression(consumeOption(options, \"opacity\")),\n    q: normalize_expression(consumeOption(options, \"quality\")),\n    r: radius,\n    t: named_transformation,\n    u: underlay,\n    w: normalize_expression(width),\n    x: normalize_expression(consumeOption(options, \"x\")),\n    y: normalize_expression(consumeOption(options, \"y\")),\n    z: normalize_expression(consumeOption(options, \"zoom\"))\n  };\n  SIMPLE_PARAMS.forEach(([name, short]) => {\n    let value = consumeOption(options, name);\n\n    if (value !== undefined) {\n      params[short] = value;\n    }\n  });\n\n  if (params.vc != null) {\n    params.vc = process_video_params(params.vc);\n  }\n\n  [\"so\", \"eo\", \"du\"].forEach(short => {\n    if (params[short] !== undefined) {\n      params[short] = norm_range_value(params[short]);\n    }\n  });\n  let variablesParam = consumeOption(options, \"variables\", []);\n  let variables = entries(options).filter(([key, value]) => key.startsWith('$')).map(([key, value]) => {\n    delete options[key];\n    return `${key}_${normalize_expression(value)}`;\n  }).sort().concat(variablesParam.map(([name, value]) => `${name}_${normalize_expression(value)}`)).join(',');\n  let transformations = entries(params).filter(([key, value]) => utils.present(value)).map(([key, value]) => key + '_' + value).sort().join(',');\n  let raw_transformation = consumeOption(options, 'raw_transformation');\n  transformations = compact([ifValue, variables, transformations, raw_transformation]).join(\",\");\n  base_transformations.push(transformations);\n  transformations = base_transformations;\n\n  if (responsive_width) {\n    let responsive_width_transformation = config().responsive_width_transformation || DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION;\n    transformations.push(utils.generate_transformation_string(clone(responsive_width_transformation)));\n  }\n\n  if (String(width).startsWith(\"auto\") || responsive_width) {\n    options.responsive = true;\n  }\n\n  if (dpr === \"auto\") {\n    options.hidpi = true;\n  }\n\n  return filter(transformations, utils.present).join(\"/\");\n}\n\nfunction updateable_resource_params(options, params = {}) {\n  if (options.access_control != null) {\n    params.access_control = utils.jsonArrayParam(options.access_control);\n  }\n\n  if (options.auto_tagging != null) {\n    params.auto_tagging = options.auto_tagging;\n  }\n\n  if (options.background_removal != null) {\n    params.background_removal = options.background_removal;\n  }\n\n  if (options.categorization != null) {\n    params.categorization = options.categorization;\n  }\n\n  if (options.context != null) {\n    params.context = utils.encode_context(options.context);\n  }\n\n  if (options.metadata != null) {\n    params.metadata = utils.encode_context(options.metadata);\n  }\n\n  if (options.custom_coordinates != null) {\n    params.custom_coordinates = encodeDoubleArray(options.custom_coordinates);\n  }\n\n  if (options.detection != null) {\n    params.detection = options.detection;\n  }\n\n  if (options.face_coordinates != null) {\n    params.face_coordinates = encodeDoubleArray(options.face_coordinates);\n  }\n\n  if (options.headers != null) {\n    params.headers = utils.build_custom_headers(options.headers);\n  }\n\n  if (options.notification_url != null) {\n    params.notification_url = options.notification_url;\n  }\n\n  if (options.ocr != null) {\n    params.ocr = options.ocr;\n  }\n\n  if (options.raw_convert != null) {\n    params.raw_convert = options.raw_convert;\n  }\n\n  if (options.similarity_search != null) {\n    params.similarity_search = options.similarity_search;\n  }\n\n  if (options.tags != null) {\n    params.tags = toArray(options.tags).join(\",\");\n  }\n\n  if (options.quality_override != null) {\n    params.quality_override = options.quality_override;\n  }\n\n  return params;\n}\n/**\n * A list of keys used by the url() function.\n * @private\n */\n\n\nconst URL_KEYS = ['api_secret', 'auth_token', 'cdn_subdomain', 'cloud_name', 'cname', 'format', 'private_cdn', 'resource_type', 'secure', 'secure_cdn_subdomain', 'secure_distribution', 'shorten', 'sign_url', 'ssl_detected', 'type', 'url_suffix', 'use_root_path', 'version'];\n/**\n * Create a new object with only URL parameters\n * @param {object} options The source object\n * @return {Object} An object containing only URL parameters\n */\n\nfunction extractUrlParams(options) {\n  return utils.only(options, ...URL_KEYS);\n}\n/**\n * Create a new object with only transformation parameters\n * @param {object} options The source object\n * @return {Object} An object containing only transformation parameters\n */\n\n\nfunction extractTransformationParams(options) {\n  return utils.only(options, ...TRANSFORMATION_PARAMS);\n}\n/**\n * Handle the format parameter for fetch urls\n * @private\n * @param options url and transformation options. This argument may be changed by the function!\n */\n\n\nfunction patchFetchFormat(options = {}) {\n  if (options.type === \"fetch\") {\n    if (options.fetch_format == null) {\n      options.fetch_format = consumeOption(options, \"format\");\n    }\n  }\n}\n\nfunction url(public_id, options = {}) {\n  let signature, source_to_sign;\n  utils.patchFetchFormat(options);\n  let type = consumeOption(options, \"type\", null);\n  let transformation = utils.generate_transformation_string(options);\n  let resource_type = consumeOption(options, \"resource_type\", \"image\");\n  let version = consumeOption(options, \"version\");\n  let force_version = consumeOption(options, \"force_version\", config().force_version);\n\n  if (force_version == null) {\n    force_version = true;\n  }\n\n  let format = consumeOption(options, \"format\");\n  let cloud_name = consumeOption(options, \"cloud_name\", config().cloud_name);\n\n  if (!cloud_name) {\n    throw \"Unknown cloud_name\";\n  }\n\n  let private_cdn = consumeOption(options, \"private_cdn\", config().private_cdn);\n  let secure_distribution = consumeOption(options, \"secure_distribution\", config().secure_distribution);\n  let secure = consumeOption(options, \"secure\", null);\n  let ssl_detected = consumeOption(options, \"ssl_detected\", config().ssl_detected);\n\n  if (secure === null) {\n    secure = ssl_detected || config().secure;\n  }\n\n  let cdn_subdomain = consumeOption(options, \"cdn_subdomain\", config().cdn_subdomain);\n  let secure_cdn_subdomain = consumeOption(options, \"secure_cdn_subdomain\", config().secure_cdn_subdomain);\n  let cname = consumeOption(options, \"cname\", config().cname);\n  let shorten = consumeOption(options, \"shorten\", config().shorten);\n  let sign_url = consumeOption(options, \"sign_url\", config().sign_url);\n  let api_secret = consumeOption(options, \"api_secret\", config().api_secret);\n  let url_suffix = consumeOption(options, \"url_suffix\");\n  let use_root_path = consumeOption(options, \"use_root_path\", config().use_root_path);\n  let auth_token = consumeOption(options, \"auth_token\");\n\n  if (auth_token !== false) {\n    auth_token = exports.merge(config().auth_token, auth_token);\n  }\n\n  let preloaded = /^(image|raw)\\/([a-z0-9_]+)\\/v(\\d+)\\/([^#]+)$/.exec(public_id);\n\n  if (preloaded) {\n    resource_type = preloaded[1];\n    type = preloaded[2];\n    version = preloaded[3];\n    public_id = preloaded[4];\n  }\n\n  let original_source = public_id;\n\n  if (public_id == null) {\n    return original_source;\n  }\n\n  public_id = public_id.toString();\n\n  if (type === null && public_id.match(/^https?:\\//i)) {\n    return original_source;\n  }\n\n  [resource_type, type] = finalize_resource_type(resource_type, type, url_suffix, use_root_path, shorten);\n  [public_id, source_to_sign] = finalize_source(public_id, format, url_suffix);\n\n  if (version == null && force_version && source_to_sign.indexOf(\"/\") >= 0 && !source_to_sign.match(/^v[0-9]+/) && !source_to_sign.match(/^https?:\\//)) {\n    version = 1;\n  }\n\n  if (version != null) {\n    version = `v${version}`;\n  } else {\n    version = null;\n  }\n\n  transformation = transformation.replace(/([^:])\\/\\//g, '$1/');\n\n  if (sign_url && isEmpty(auth_token)) {\n    let to_sign = [transformation, source_to_sign].filter(function (part) {\n      return part != null && part !== '';\n    }).join('/');\n\n    try {\n      for (let i = 0; to_sign !== decodeURIComponent(to_sign) && i < 10; i++) {\n        to_sign = decodeURIComponent(to_sign);\n      } // eslint-disable-next-line no-empty\n\n    } catch (error) {}\n\n    let shasum = crypto.createHash('sha1');\n    shasum.update(utf8_encode(to_sign + api_secret), 'binary');\n    signature = shasum.digest('base64').replace(/\\//g, '_').replace(/\\+/g, '-').substring(0, 8);\n    signature = `s--${signature}--`;\n  }\n\n  let prefix = unsigned_url_prefix(public_id, cloud_name, private_cdn, cdn_subdomain, secure_cdn_subdomain, cname, secure, secure_distribution);\n  let resultUrl = [prefix, resource_type, type, signature, transformation, version, public_id].filter(function (part) {\n    return part != null && part !== '';\n  }).join('/').replace(' ', '%20');\n\n  if (sign_url && !isEmpty(auth_token)) {\n    auth_token.url = urlParse(resultUrl).path;\n    let token = generate_token(auth_token);\n    resultUrl += `?${token}`;\n  }\n\n  return resultUrl;\n}\n\nfunction video_url(public_id, options) {\n  options = extend({\n    resource_type: 'video'\n  }, options);\n  return utils.url(public_id, options);\n}\n\nfunction finalize_source(source, format, url_suffix) {\n  let source_to_sign;\n  source = source.replace(/([^:])\\/\\//g, '$1/');\n\n  if (source.match(/^https?:\\//i)) {\n    source = smart_escape(source);\n    source_to_sign = source;\n  } else {\n    source = encodeURIComponent(decodeURIComponent(source)).replace(/%3A/g, \":\").replace(/%2F/g, \"/\");\n    source_to_sign = source;\n\n    if (url_suffix) {\n      if (url_suffix.match(/[\\.\\/]/)) {\n        throw new Error('url_suffix should not include . or /');\n      }\n\n      source = source + '/' + url_suffix;\n    }\n\n    if (format != null) {\n      source = source + '.' + format;\n      source_to_sign = source_to_sign + '.' + format;\n    }\n  }\n\n  return [source, source_to_sign];\n}\n\nfunction video_thumbnail_url(public_id, options) {\n  options = extend({}, DEFAULT_POSTER_OPTIONS, options);\n  return utils.url(public_id, options);\n}\n\nfunction finalize_resource_type(resource_type, type, url_suffix, use_root_path, shorten) {\n  if (type == null) {\n    type = 'upload';\n  }\n\n  if (url_suffix != null) {\n    if (resource_type === 'image' && type === 'upload') {\n      resource_type = \"images\";\n      type = null;\n    } else if (resource_type === 'image' && type === 'private') {\n      resource_type = 'private_images';\n      type = null;\n    } else if (resource_type === 'image' && type === 'authenticated') {\n      resource_type = 'authenticated_images';\n      type = null;\n    } else if (resource_type === 'raw' && type === 'upload') {\n      resource_type = 'files';\n      type = null;\n    } else if (resource_type === 'video' && type === 'upload') {\n      resource_type = 'videos';\n      type = null;\n    } else {\n      throw new Error(\"URL Suffix only supported for image/upload, image/private, image/authenticated, video/upload and raw/upload\");\n    }\n  }\n\n  if (use_root_path) {\n    if (resource_type === 'image' && type === 'upload' || resource_type === 'images' && type == null) {\n      resource_type = null;\n      type = null;\n    } else {\n      throw new Error(\"Root path only supported for image/upload\");\n    }\n  }\n\n  if (shorten && resource_type === 'image' && type === 'upload') {\n    resource_type = 'iu';\n    type = null;\n  }\n\n  return [resource_type, type];\n} // cdn_subdomain and secure_cdn_subdomain\n// 1) Customers in shared distribution (e.g. res.cloudinary.com)\n//    if cdn_domain is true uses res-[1-5].cloudinary.com for both http and https.\n//    Setting secure_cdn_subdomain to false disables this for https.\n// 2) Customers with private cdn\n//    if cdn_domain is true uses cloudname-res-[1-5].cloudinary.com for http\n//    if secure_cdn_domain is true uses cloudname-res-[1-5].cloudinary.com for https\n//      (please contact support if you require this)\n// 3) Customers with cname\n//    if cdn_domain is true uses a[1-5].cname for http.\n//    For https, uses the same naming scheme as 1 for shared distribution and as 2 for private distribution.\n\n\nfunction unsigned_url_prefix(source, cloud_name, private_cdn, cdn_subdomain, secure_cdn_subdomain, cname, secure, secure_distribution) {\n  let prefix;\n\n  if (cloud_name.indexOf(\"/\") === 0) {\n    return '/res' + cloud_name;\n  }\n\n  let shared_domain = !private_cdn;\n\n  if (secure) {\n    if (secure_distribution == null || secure_distribution === exports.OLD_AKAMAI_SHARED_CDN) {\n      secure_distribution = private_cdn ? cloud_name + \"-res.cloudinary.com\" : exports.SHARED_CDN;\n    }\n\n    if (shared_domain == null) {\n      shared_domain = secure_distribution === exports.SHARED_CDN;\n    }\n\n    if (secure_cdn_subdomain == null && shared_domain) {\n      secure_cdn_subdomain = cdn_subdomain;\n    }\n\n    if (secure_cdn_subdomain) {\n      secure_distribution = secure_distribution.replace('res.cloudinary.com', 'res-' + (crc32(source) % 5 + 1 + '.cloudinary.com'));\n    }\n\n    prefix = 'https://' + secure_distribution;\n  } else if (cname) {\n    let subdomain = cdn_subdomain ? 'a' + (crc32(source) % 5 + 1) + '.' : '';\n    prefix = 'http://' + subdomain + cname;\n  } else {\n    let cdn_part = private_cdn ? cloud_name + '-' : '';\n    let subdomain_part = cdn_subdomain ? '-' + (crc32(source) % 5 + 1) : '';\n    let host = [cdn_part, 'res', subdomain_part, '.cloudinary.com'].join('');\n    prefix = 'http://' + host;\n  }\n\n  if (shared_domain) {\n    prefix += '/' + cloud_name;\n  }\n\n  return prefix;\n}\n\nfunction api_url(action = 'upload', options = {}) {\n  let cloudinary = ensureOption(options, \"upload_prefix\", \"https://api.cloudinary.com\");\n  let cloud_name = ensureOption(options, \"cloud_name\");\n  let resource_type = options.resource_type || \"image\";\n  return [cloudinary, \"v1_1\", cloud_name, resource_type, action].join(\"/\");\n}\n\nfunction random_public_id() {\n  return crypto.randomBytes(12).toString('base64').replace(/[^a-z0-9]/g, \"\");\n}\n\nfunction signed_preloaded_image(result) {\n  return `${result.resource_type}/upload/v${result.version}/${filter([result.public_id, result.format], utils.present).join(\".\")}#${result.signature}`;\n}\n\nfunction api_sign_request(params_to_sign, api_secret) {\n  let to_sign = entries(params_to_sign).filter(([k, v]) => utils.present(v)).map(([k, v]) => `${k}=${toArray(v).join(\",\")}`).sort().join(\"&\");\n  let shasum = crypto.createHash('sha1');\n  shasum.update(utf8_encode(to_sign + api_secret), 'binary');\n  return shasum.digest('hex');\n}\n\nfunction clear_blank(hash) {\n  let filtered_hash = {};\n  entries(hash).filter(([k, v]) => utils.present(v)).forEach(([k, v]) => {\n    filtered_hash[k] = v;\n  });\n  return filtered_hash;\n}\n\nfunction merge(hash1, hash2) {\n  return { ...hash1,\n    ...hash2\n  };\n}\n\nfunction sign_request(params, options = {}) {\n  let apiKey = ensureOption(options, 'api_key');\n  let apiSecret = ensureOption(options, 'api_secret');\n  params = exports.clear_blank(params);\n  params.signature = exports.api_sign_request(params, apiSecret);\n  params.api_key = apiKey;\n  return params;\n}\n\nfunction webhook_signature(data, timestamp, options = {}) {\n  ensurePresenceOf({\n    data,\n    timestamp\n  });\n  let api_secret = ensureOption(options, 'api_secret');\n  let shasum = crypto.createHash('sha1');\n  shasum.update(data + timestamp + api_secret, 'binary');\n  return shasum.digest('hex');\n}\n/**\n * Verifies the authenticity of a notification signature\n *\n * @param {string} body JSON of the request's body\n * @param {number} timestamp Unix timestamp. Can be retrieved from the X-Cld-Timestamp header\n * @param {string} signature Actual signature. Can be retrieved from the X-Cld-Signature header\n * @param {number} [valid_for=7200] The desired time in seconds for considering the request valid\n *\n * @return {boolean}\n */\n\n\nfunction verifyNotificationSignature(body, timestamp, signature, valid_for = 7200) {\n  // verify that signature is valid for the given timestamp\n  if (timestamp < Date.now() - valid_for) {\n    return false;\n  }\n\n  const payload_hash = utils.webhook_signature(body, timestamp, {\n    api_secret: config().api_secret\n  });\n  return signature === payload_hash;\n}\n\nfunction process_request_params(params, options) {\n  if (options.unsigned != null && options.unsigned) {\n    params = exports.clear_blank(params);\n    delete params.timestamp;\n  } else if (options.signature) {\n    params = exports.clear_blank(options);\n  } else {\n    params = exports.sign_request(params, options);\n  }\n\n  return params;\n}\n\nfunction private_download_url(public_id, format, options = {}) {\n  let params = exports.sign_request({\n    timestamp: options.timestamp || exports.timestamp(),\n    public_id: public_id,\n    format: format,\n    type: options.type,\n    attachment: options.attachment,\n    expires_at: options.expires_at\n  }, options);\n  return exports.api_url(\"download\", options) + \"?\" + querystring.stringify(params);\n}\n/**\n * Utility method that uses the deprecated ZIP download API.\n * @deprecated Replaced by {download_zip_url} that uses the more advanced and robust archive generation and download API\n */\n\n\nfunction zip_download_url(tag, options = {}) {\n  let params = exports.sign_request({\n    timestamp: options.timestamp || exports.timestamp(),\n    tag: tag,\n    transformation: utils.generate_transformation_string(options)\n  }, options);\n  return exports.api_url(\"download_tag.zip\", options) + \"?\" + hashToQuery(params);\n}\n/**\n * Returns a URL that when invokes creates an archive and returns it.\n * @param {object} options\n * @param {string} [options.resource_type=\"image\"] The resource type of files to include in the archive.\n *   Must be one of :image | :video | :raw\n * @param {string} [options.type=\"upload\"] The specific file type of resources: :upload|:private|:authenticated\n * @param {string|Array} [options.tags] list of tags to include in the archive\n * @param {string|Array<string>} [options.public_ids] list of public_ids to include in the archive\n * @param {string|Array<string>} [options.prefixes]  list of prefixes of public IDs (e.g., folders).\n * @param {string|Array<string>} [options.fully_qualified_public_ids] list of fully qualified public_ids to include\n *   in the archive.\n * @param {string|Array<string>} [options.transformations]  list of transformations.\n *   The derived images of the given transformations are included in the archive. Using the string representation of\n *   multiple chained transformations as we use for the 'eager' upload parameter.\n * @param {string} [options.mode=\"create\"] return the generated archive file or to store it as a raw resource and\n *   return a JSON with URLs for accessing the archive. Possible values: :download, :create\n * @param {string} [options.target_format=\"zip\"]\n * @param {string} [options.target_public_id]  public ID of the generated raw resource.\n *   Relevant only for the create mode. If not specified, random public ID is generated.\n * @param {boolean} [options.flatten_folders=false] If true, flatten public IDs with folders to be in the root\n *   of the archive. Add numeric counter to the file name in case of a name conflict.\n * @param {boolean} [options.flatten_transformations=false] If true, and multiple transformations are given,\n *   flatten the folder structure of derived images and store the transformation details on the file name instead.\n * @param {boolean} [options.use_original_filename] Use the original file name of included images\n *   (if available) instead of the public ID.\n * @param {boolean} [options.async=false] If true, return immediately and perform archive creation in the background.\n *   Relevant only for the create mode.\n * @param {string} [options.notification_url] URL to send an HTTP post request (webhook) to when the\n *   archive creation is completed.\n * @param {string|Array<string>} [options.target_tags=] Allows assigning one or more tags to the generated archive file\n *   (for later housekeeping via the admin API).\n * @param {string} [options.keep_derived=false] keep the derived images used for generating the archive\n * @return {String} archive url\n */\n\n\nfunction download_archive_url(options = {}) {\n  let cloudinary_params = exports.sign_request(exports.archive_params(merge(options, {\n    mode: \"download\"\n  })), options);\n  return exports.api_url(\"generate_archive\", options) + \"?\" + hashToQuery(cloudinary_params);\n}\n/**\n * Returns a URL that when invokes creates an zip archive and returns it.\n * @see download_archive_url\n */\n\n\nfunction download_zip_url(options = {}) {\n  return exports.download_archive_url(merge(options, {\n    target_format: \"zip\"\n  }));\n}\n/**\n * Render the key/value pair as an HTML tag attribute\n * @private\n * @param {string} key\n * @param {string|boolean|number} [value]\n * @return {string} A string representing the HTML attribute\n */\n\n\nfunction join_pair(key, value) {\n  if (!value) {\n    return void 0;\n  }\n\n  return value === true ? key : key + \"='\" + value + \"'\";\n}\n/**\n * If the given value is a string, replaces single or double quotes with character entities\n * @private\n * @param {*} value The string to encode quotes in\n * @return {*} Encoded string or original value if not a string\n */\n\n\nfunction escapeQuotes(value) {\n  return isString(value) ? value.replace('\"', '&#34;').replace(\"'\", '&#39;') : value;\n}\n/**\n *\n * @param attrs\n * @return {*}\n */\n\n\nexports.html_attrs = function html_attrs(attrs) {\n  return filter(map(attrs, function (value, key) {\n    return join_pair(key, escapeQuotes(value));\n  })).sort().join(\" \");\n};\n\nconst CLOUDINARY_JS_CONFIG_PARAMS = ['api_key', 'cloud_name', 'private_cdn', 'secure_distribution', 'cdn_subdomain'];\n\nfunction cloudinary_js_config() {\n  let params = utils.only(config(), ...CLOUDINARY_JS_CONFIG_PARAMS);\n  return `<script type='text/javascript'>\\n$.cloudinary.config(${JSON.stringify(params)});\\n</script>`;\n}\n\nfunction v1_result_adapter(callback) {\n  if (callback == null) {\n    return undefined;\n  }\n\n  return function (result) {\n    if (result.error != null) {\n      return callback(result.error);\n    }\n\n    return callback(void 0, result);\n  };\n}\n\nfunction v1_adapter(name, num_pass_args, v1) {\n  return function (...args) {\n    let pass_args = take(args, num_pass_args);\n    let options = args[num_pass_args];\n    let callback = args[num_pass_args + 1];\n\n    if (callback == null && isFunction(options)) {\n      callback = options;\n      options = {};\n    }\n\n    callback = v1_result_adapter(callback);\n    args = pass_args.concat([callback, options]);\n    return v1[name].apply(this, args);\n  };\n}\n\nfunction v1_adapters(exports, v1, mapping) {\n  return Object.keys(mapping).map(name => {\n    let num_pass_args = mapping[name];\n    exports[name] = v1_adapter(name, num_pass_args, v1);\n    return exports[name];\n  });\n}\n\nfunction as_safe_bool(value) {\n  if (value == null) {\n    return void 0;\n  }\n\n  if (value === true || value === 'true' || value === '1') {\n    value = 1;\n  }\n\n  if (value === false || value === 'false' || value === '0') {\n    value = 0;\n  }\n\n  return value;\n}\n\nconst NUMBER_PATTERN = \"([0-9]*)\\\\.([0-9]+)|([0-9]+)\";\nconst OFFSET_ANY_PATTERN = `(${NUMBER_PATTERN})([%pP])?`;\nconst RANGE_VALUE_RE = RegExp(`^${OFFSET_ANY_PATTERN}$`);\nconst OFFSET_ANY_PATTERN_RE = RegExp(`(${OFFSET_ANY_PATTERN})\\\\.\\\\.(${OFFSET_ANY_PATTERN})`); // Split a range into the start and end values\n\nfunction split_range(range) {\n  // :nodoc:\n  switch (range.constructor) {\n    case String:\n      if (!OFFSET_ANY_PATTERN_RE.test(range)) {\n        return range;\n      }\n\n      return range.split(\"..\");\n\n    case Array:\n      return [first(range), last(range)];\n\n    default:\n      return [null, null];\n  }\n}\n\nfunction norm_range_value(value) {\n  // :nodoc:\n  let offset = String(value).match(RANGE_VALUE_RE);\n\n  if (offset) {\n    let modifier = offset[5] ? 'p' : '';\n    value = `${offset[1] || offset[4]}${modifier}`;\n  }\n\n  return value;\n}\n/**\n * A video codec parameter can be either a String or a Hash.\n * @param {Object} param <code>vc_<codec>[ : <profile> : [<level>]]</code>\n *                       or <code>{ codec: 'h264', profile: 'basic', level: '3.1' }</code>\n * @return {String} <code><codec> : <profile> : [<level>]]</code> if a Hash was provided\n *                   or the param if a String was provided.\n *                   Returns null if param is not a Hash or String\n */\n\n\nfunction process_video_params(param) {\n  switch (param.constructor) {\n    case Object:\n      {\n        let video = \"\";\n\n        if ('codec' in param) {\n          video = param.codec;\n\n          if ('profile' in param) {\n            video += \":\" + param.profile;\n\n            if ('level' in param) {\n              video += \":\" + param.level;\n            }\n          }\n        }\n\n        return video;\n      }\n\n    case String:\n      return param;\n\n    default:\n      return null;\n  }\n}\n/**\n * Returns a Hash of parameters used to create an archive\n * @private\n * @param {object} options\n * @return {object} Archive API parameters\n */\n\n\nfunction archive_params(options = {}) {\n  return {\n    allow_missing: exports.as_safe_bool(options.allow_missing),\n    async: exports.as_safe_bool(options.async),\n    expires_at: options.expires_at,\n    flatten_folders: exports.as_safe_bool(options.flatten_folders),\n    flatten_transformations: exports.as_safe_bool(options.flatten_transformations),\n    keep_derived: exports.as_safe_bool(options.keep_derived),\n    mode: options.mode,\n    notification_url: options.notification_url,\n    prefixes: options.prefixes && toArray(options.prefixes),\n    fully_qualified_public_ids: options.fully_qualified_public_ids && toArray(options.fully_qualified_public_ids),\n    public_ids: options.public_ids && toArray(options.public_ids),\n    skip_transformation_name: exports.as_safe_bool(options.skip_transformation_name),\n    tags: options.tags && toArray(options.tags),\n    target_format: options.target_format,\n    target_public_id: options.target_public_id,\n    target_tags: options.target_tags && toArray(options.target_tags),\n    timestamp: options.timestamp || exports.timestamp(),\n    transformations: utils.build_eager(options.transformations),\n    type: options.type,\n    use_original_filename: exports.as_safe_bool(options.use_original_filename)\n  };\n}\n\nexports.create_source_tag = function create_source_tag(src, source_type, codecs = null) {\n  let video_type = source_type === 'ogv' ? 'ogg' : source_type;\n  let mime_type = `video/${video_type}`;\n\n  if (!isEmpty(codecs)) {\n    let codecs_str = isArray(codecs) ? codecs.join(', ') : codecs;\n    mime_type += `; codecs=${codecs_str}`;\n  }\n\n  return `<source ${utils.html_attrs({\n    src,\n    type: mime_type\n  })}>`;\n};\n\nfunction build_explicit_api_params(public_id, options = {}) {\n  return [exports.build_upload_params(extend({}, {\n    public_id\n  }, options))];\n}\n\nfunction generate_responsive_breakpoints_string(breakpoints) {\n  if (breakpoints == null) {\n    return null;\n  }\n\n  breakpoints = clone(breakpoints);\n\n  if (!isArray(breakpoints)) {\n    breakpoints = [breakpoints];\n  }\n\n  for (let j = 0; j < breakpoints.length; j++) {\n    let breakpoint_settings = breakpoints[j];\n\n    if (breakpoint_settings != null) {\n      if (breakpoint_settings.transformation) {\n        breakpoint_settings.transformation = utils.generate_transformation_string(clone(breakpoint_settings.transformation));\n      }\n    }\n  }\n\n  return JSON.stringify(breakpoints);\n}\n\nfunction build_streaming_profiles_param(options = {}) {\n  let params = utils.only(options, \"display_name\", \"representations\");\n\n  if (isArray(params.representations)) {\n    params.representations = JSON.stringify(params.representations.map(r => ({\n      transformation: utils.generate_transformation_string(r.transformation)\n    })));\n  }\n\n  return params;\n}\n\nfunction hashToParameters(hash) {\n  return entries(hash).reduce((parameters, [key, value]) => {\n    if (isArray(value)) {\n      key = key.endsWith('[]') ? key : key + '[]';\n      const items = value.map(v => [key, v]);\n      parameters = parameters.concat(items);\n    } else {\n      parameters.push([key, value]);\n    }\n\n    return parameters;\n  }, []);\n}\n/**\n * Convert a hash of values to a URI query string.\n * Array values are spread as individual parameters.\n * @param {object} hash Key-value parameters\n * @return {string} A URI query string.\n */\n\n\nfunction hashToQuery(hash) {\n  return hashToParameters(hash).map(([key, value]) => `${querystring.escape(key)}=${querystring.escape(value)}`).join('&');\n}\n/**\n * Verify that the parameter `value` is defined and it's string value is not zero.\n * <br>This function should not be confused with `isEmpty()`.\n * @private\n * @param {string|number} value The value to check.\n * @return {boolean} True if the value is defined and not empty.\n */\n\n\nfunction present(value) {\n  return value != null && (\"\" + value).length > 0;\n}\n/**\n * Returns a new object with key values from source based on the keys.\n * `null` or `undefined` values are not copied.\n * @private\n * @param {object} source The object to pick values from.\n * @param {...string} keys One or more keys to copy from source.\n * @return {object} A new object with the required keys and values.\n */\n\n\nfunction only(source, ...keys) {\n  let result = {};\n\n  if (source) {\n    for (let j = 0; j < keys.length; j++) {\n      let key = keys[j];\n\n      if (source[key] != null) {\n        result[key] = source[key];\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * Returns a JSON array as String.\n * Yields the array before it is converted to JSON format\n * @private\n * @param {object|String|Array<object>} data\n * @param {function(*):*} [modifier] called with the array before the array is stringified\n * @return {String|null} a JSON array string or `null` if data is `null`\n */\n\n\nfunction jsonArrayParam(data, modifier) {\n  if (!data) {\n    return null;\n  }\n\n  if (isString(data)) {\n    data = JSON.parse(data);\n  }\n\n  if (!isArray(data)) {\n    data = [data];\n  }\n\n  if (isFunction(modifier)) {\n    data = modifier(data);\n  }\n\n  return JSON.stringify(data);\n}\n/**\n * Empty function - do nothing\n *\n */\n\n\nexports.NOP = function () {};\n\nexports.generate_auth_token = generate_auth_token;\nexports.getUserAgent = getUserAgent;\nexports.build_upload_params = build_upload_params;\n\nexports.timestamp = () => Math.floor(new Date().getTime() / 1000);\n\nexports.option_consume = consumeOption; // for backwards compatibility\n\nexports.build_array = toArray; // for backwards compatibility\n\nexports.encode_double_array = encodeDoubleArray;\nexports.encode_key_value = encode_key_value;\nexports.encode_context = encode_context;\nexports.build_eager = build_eager;\nexports.build_custom_headers = build_custom_headers;\nexports.generate_transformation_string = generate_transformation_string;\nexports.updateable_resource_params = updateable_resource_params;\nexports.extractUrlParams = extractUrlParams;\nexports.extractTransformationParams = extractTransformationParams;\nexports.patchFetchFormat = patchFetchFormat;\nexports.url = url;\nexports.video_url = video_url;\nexports.video_thumbnail_url = video_thumbnail_url;\nexports.api_url = api_url;\nexports.random_public_id = random_public_id;\nexports.signed_preloaded_image = signed_preloaded_image;\nexports.api_sign_request = api_sign_request;\nexports.clear_blank = clear_blank;\nexports.merge = merge;\nexports.sign_request = sign_request;\nexports.webhook_signature = webhook_signature;\nexports.verifyNotificationSignature = verifyNotificationSignature;\nexports.process_request_params = process_request_params;\nexports.private_download_url = private_download_url;\nexports.zip_download_url = zip_download_url;\nexports.download_archive_url = download_archive_url;\nexports.download_zip_url = download_zip_url;\nexports.cloudinary_js_config = cloudinary_js_config;\nexports.v1_adapters = v1_adapters;\nexports.as_safe_bool = as_safe_bool;\nexports.archive_params = archive_params;\nexports.build_explicit_api_params = build_explicit_api_params;\nexports.generate_responsive_breakpoints_string = generate_responsive_breakpoints_string;\nexports.build_streaming_profiles_param = build_streaming_profiles_param;\nexports.hashToParameters = hashToParameters;\nexports.present = present;\nexports.only = only;\nexports.jsonArrayParam = jsonArrayParam; // was exported before, so kept for backwards compatibility\n\nexports.DEFAULT_POSTER_OPTIONS = DEFAULT_POSTER_OPTIONS;\nexports.DEFAULT_VIDEO_SOURCE_TYPES = DEFAULT_VIDEO_SOURCE_TYPES;\nObject.assign(module.exports, {\n  at,\n  clone,\n  extend,\n  filter,\n  includes,\n  isArray,\n  isEmpty,\n  isNumber,\n  isObject,\n  isRemoteUrl,\n  isString,\n  isUndefined,\n  keys: source => Object.keys(source),\n  ensurePresenceOf\n});","map":{"version":3,"sources":["/home/thomas/code/Lersoo/tutorial_maker/client/node_modules/cloudinary/lib/utils/index.js"],"names":["crypto","require","querystring","urlParse","parse","compact","first","isFunction","isPlainObject","last","map","take","at","clone","extend","filter","includes","isArray","isEmpty","isNumber","isObject","isString","isUndefined","smart_escape","consumeOption","toArray","base64EncodeURL","encodeDoubleArray","config","generate_token","utf8_encode","crc32","ensurePresenceOf","ensureOption","defaults","entries","isRemoteUrl","exports","module","utils","VERSION","version","error","generate_auth_token","options","token_options","Object","assign","auth_token","CF_SHARED_CDN","OLD_AKAMAI_SHARED_CDN","AKAMAI_SHARED_CDN","SHARED_CDN","USER_AGENT","userPlatform","getUserAgent","DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION","DEFAULT_POSTER_OPTIONS","DEFAULT_VIDEO_SOURCE_TYPES","CONDITIONAL_OPERATORS","PREDEFINED_VARS","LAYER_KEYWORD_PARAMS","TRANSFORMATION_PARAMS","SIMPLE_PARAMS","textStyle","layer","keywords","style","keys","forEach","attr","default_value","attr_value","push","split","pop","hasOwnProperty","font_size","font_family","unshift","join","normalize_expression","expression","length","match","operators","pattern","replaceRE","RegExp","replace","process_custom_function","customFunction","function_type","source","process_custom_pre_function","customPreFunction","result","process_if","ifValue","process_layer","resource_type","url","public_id","format","type","text","components","noPublicId","noStyle","re","start","textSource","decodeURIComponent","res","exec","slice","index","encodeURIComponent","test","substr","process_radius","radius","Error","findIndex","x","build_upload_params","params","access_mode","allowed_formats","async","as_safe_bool","backup","callback","colors","discard_original_filename","eager","build_eager","eager_async","eager_notification_url","exif","faces","folder","image_metadata","invalidate","moderation","notification_url","overwrite","phash","proxy","quality_analysis","responsive_breakpoints","generate_responsive_breakpoints_string","return_delete_token","timestamp","transformation","generate_transformation_string","unique_filename","upload_preset","use_filename","quality_override","updateable_resource_params","encode_key_value","arg","k","v","encode_context","transformations","transformationString","build_custom_headers","headers","t","present","responsive_width","width","height","size","has_layer","overlay","underlay","crop","angle","no_html_sizes","toString","indexOf","parseFloat","background","color","base_transformations","named_transformation","some","tr","effect","key","value","border","flags","dpr","offset","start_offset","end_offset","split_range","custom_function","custom_pre_function","fps","a","ar","b","bo","c","co","e","fl","fn","h","ki","l","o","q","r","u","w","y","z","name","short","undefined","vc","process_video_params","norm_range_value","variablesParam","variables","startsWith","sort","concat","raw_transformation","responsive_width_transformation","String","responsive","hidpi","access_control","jsonArrayParam","auto_tagging","background_removal","categorization","context","metadata","custom_coordinates","detection","face_coordinates","ocr","raw_convert","similarity_search","tags","URL_KEYS","extractUrlParams","only","extractTransformationParams","patchFetchFormat","fetch_format","signature","source_to_sign","force_version","cloud_name","private_cdn","secure_distribution","secure","ssl_detected","cdn_subdomain","secure_cdn_subdomain","cname","shorten","sign_url","api_secret","url_suffix","use_root_path","merge","preloaded","original_source","finalize_resource_type","finalize_source","to_sign","part","i","shasum","createHash","update","digest","substring","prefix","unsigned_url_prefix","resultUrl","path","token","video_url","video_thumbnail_url","shared_domain","subdomain","cdn_part","subdomain_part","host","api_url","action","cloudinary","random_public_id","randomBytes","signed_preloaded_image","api_sign_request","params_to_sign","clear_blank","hash","filtered_hash","hash1","hash2","sign_request","apiKey","apiSecret","api_key","webhook_signature","data","verifyNotificationSignature","body","valid_for","Date","now","payload_hash","process_request_params","unsigned","private_download_url","attachment","expires_at","stringify","zip_download_url","tag","hashToQuery","download_archive_url","cloudinary_params","archive_params","mode","download_zip_url","target_format","join_pair","escapeQuotes","html_attrs","attrs","CLOUDINARY_JS_CONFIG_PARAMS","cloudinary_js_config","JSON","v1_result_adapter","v1_adapter","num_pass_args","v1","args","pass_args","apply","v1_adapters","mapping","NUMBER_PATTERN","OFFSET_ANY_PATTERN","RANGE_VALUE_RE","OFFSET_ANY_PATTERN_RE","range","constructor","Array","modifier","param","video","codec","profile","level","allow_missing","flatten_folders","flatten_transformations","keep_derived","prefixes","fully_qualified_public_ids","public_ids","skip_transformation_name","target_public_id","target_tags","use_original_filename","create_source_tag","src","source_type","codecs","video_type","mime_type","codecs_str","build_explicit_api_params","breakpoints","j","breakpoint_settings","build_streaming_profiles_param","representations","hashToParameters","reduce","parameters","endsWith","items","escape","NOP","Math","floor","getTime","option_consume","build_array","encode_double_array"],"mappings":"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","sourcesContent":["/**\n * Utilities\n * @module utils\n * @borrows module:auth_token as generate_auth_token\n */\n\nconst crypto = require(\"crypto\");\nconst querystring = require(\"querystring\");\nconst urlParse = require(\"url\").parse;\n\n// Functions used internally\nconst compact = require(\"lodash/compact\");\nconst first = require(\"lodash/first\");\nconst isFunction = require(\"lodash/isFunction\");\nconst isPlainObject = require(\"lodash/isPlainObject\");\nconst last = require(\"lodash/last\");\nconst map = require(\"lodash/map\");\nconst take = require(\"lodash/take\");\nconst at = require(\"lodash/at\");\n\n// Exposed by the module\nconst clone = require(\"lodash/clone\");\nconst extend = require(\"lodash/extend\");\nconst filter = require(\"lodash/filter\");\nconst includes = require(\"lodash/includes\");\nconst isArray = require(\"lodash/isArray\");\nconst isEmpty = require(\"lodash/isEmpty\");\nconst isNumber = require(\"lodash/isNumber\");\nconst isObject = require(\"lodash/isObject\");\nconst isString = require(\"lodash/isString\");\nconst isUndefined = require(\"lodash/isUndefined\");\n\nconst smart_escape = require(\"./encoding/smart_escape\");\nconst consumeOption = require('./parsing/consumeOption');\nconst toArray = require('./parsing/toArray');\nlet { base64EncodeURL } = require('./encoding/base64EncodeURL');\nconst encodeDoubleArray = require('./encoding/encodeDoubleArray');\n\nconst config = require(\"../config\");\nconst generate_token = require(\"../auth_token\");\nconst utf8_encode = require('./utf8_encode');\nconst crc32 = require('./crc32');\nconst ensurePresenceOf = require('./ensurePresenceOf');\nconst ensureOption = require('./ensureOption').defaults(config());\nconst entries = require('./entries');\nconst isRemoteUrl = require('./isRemoteUrl');\n\nexports = module.exports;\nconst utils = module.exports;\n\ntry {\n  // eslint-disable-next-line global-require\n  utils.VERSION = require('../../package.json').version;\n} catch (error) {\n  utils.VERSION = '';\n}\n\nfunction generate_auth_token(options) {\n  let token_options = Object.assign({}, config().auth_token, options);\n  return generate_token(token_options);\n}\n\nexports.CF_SHARED_CDN = \"d3jpl91pxevbkh.cloudfront.net\";\nexports.OLD_AKAMAI_SHARED_CDN = \"cloudinary-a.akamaihd.net\";\nexports.AKAMAI_SHARED_CDN = \"res.cloudinary.com\";\nexports.SHARED_CDN = exports.AKAMAI_SHARED_CDN;\nexports.USER_AGENT = `CloudinaryNodeJS/${exports.VERSION}`;\n\n// Add platform information to the USER_AGENT header\n// This is intended for platform information and not individual applications!\nexports.userPlatform = \"\";\n\nfunction getUserAgent() {\n  return isEmpty(utils.userPlatform) ? `${utils.USER_AGENT}` : `${utils.userPlatform} ${utils.USER_AGENT}`;\n}\n\nconst {\n  DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION,\n  DEFAULT_POSTER_OPTIONS,\n  DEFAULT_VIDEO_SOURCE_TYPES,\n  CONDITIONAL_OPERATORS,\n  PREDEFINED_VARS,\n  LAYER_KEYWORD_PARAMS,\n  TRANSFORMATION_PARAMS,\n  SIMPLE_PARAMS,\n} = require('./consts');\n\nfunction textStyle(layer) {\n  let keywords = [];\n  let style = \"\";\n  Object.keys(LAYER_KEYWORD_PARAMS).forEach((attr) => {\n    let default_value = LAYER_KEYWORD_PARAMS[attr];\n    let attr_value = layer[attr] || default_value;\n    if (attr_value !== default_value) {\n      keywords.push(attr_value);\n    }\n  });\n\n  Object.keys(layer).forEach((attr) => {\n    if (attr === \"letter_spacing\" || attr === \"line_spacing\") {\n      keywords.push(`${attr}_${layer[attr]}`);\n    }\n    if (attr === \"font_hinting\") {\n      keywords.push(`${attr.split(\"_\").pop()}_${layer[attr]}`);\n    }\n    if (attr === \"font_antialiasing\") {\n      keywords.push(`antialias_${layer[attr]}`);\n    }\n  });\n\n  if (layer.hasOwnProperty(\"font_size\" || \"font_family\") || !isEmpty(keywords)) {\n    if (!layer.font_size) throw `Must supply font_size for text in overlay/underlay`;\n    if (!layer.font_family) throw `Must supply font_family for text in overlay/underlay`;\n    keywords.unshift(layer.font_size);\n    keywords.unshift(layer.font_family);\n    style = compact(keywords).join(\"_\");\n  }\n  return style;\n}\n\n/**\n * Normalize an offset value\n * @param {String} expression a decimal value which may have a 'p' or '%' postfix. E.g. '35%', '0.4p'\n * @return {Object|String} a normalized String of the input value if possible otherwise the value itself\n */\nfunction normalize_expression(expression) {\n  if (!isString(expression) || expression.length === 0 || expression.match(/^!.+!$/)) {\n    return expression;\n  }\n  const operators = \"\\\\|\\\\||>=|<=|&&|!=|>|=|<|/|-|\\\\+|\\\\*\";\n  const pattern = \"((\" + operators + \")(?=[ _])|\" + Object.keys(PREDEFINED_VARS).join(\"|\") + \")\";\n  const replaceRE = new RegExp(pattern, \"g\");\n  expression = expression.replace(replaceRE, function (match) {\n    return CONDITIONAL_OPERATORS[match] || PREDEFINED_VARS[match];\n  });\n  return expression.replace(/[ _]+/g, '_');\n}\n\n/**\n * Parse custom_function options\n * @private\n * @param {object|*} customFunction a custom function object containing function_type and source values\n * @return {string|*} custom_function transformation string\n */\nfunction process_custom_function(customFunction) {\n  if (!isObject(customFunction)) {\n    return customFunction;\n  }\n  if (customFunction.function_type === \"remote\") {\n    return [customFunction.function_type, base64EncodeURL(customFunction.source)].join(\":\");\n  }\n  return [customFunction.function_type, customFunction.source].join(\":\");\n}\n\n/**\n * Parse custom_pre_function options\n * @private\n * @param {object|*} customPreFunction a custom function object containing function_type and source values\n * @return {string|*} custom_pre_function transformation string\n */\nfunction process_custom_pre_function(customPreFunction) {\n  let result = process_custom_function(customPreFunction);\n  return utils.isString(result) ? `pre:${result}` : null;\n}\n\n/**\n * Parse \"if\" parameter\n * Translates the condition if provided.\n * @private\n * @return {string} \"if_\" + ifValue\n */\nfunction process_if(ifValue) {\n  return ifValue ? \"if_\" + normalize_expression(ifValue) : ifValue;\n}\n\n/**\n * Parse layer options\n * @private\n * @param {object|*} layer The layer to parse.\n * @return {string} layer transformation string\n */\nfunction process_layer(layer) {\n  let result = '';\n  if (isPlainObject(layer)) {\n    if (layer.resource_type === \"fetch\" || (layer.url != null)) {\n      result = `fetch:${base64EncodeURL(layer.url)}`;\n    } else {\n      let public_id = layer.public_id;\n      let format = layer.format;\n      let resource_type = layer.resource_type || \"image\";\n      let type = layer.type || \"upload\";\n      let text = layer.text;\n      let style = null;\n      let components = [];\n      const noPublicId = isEmpty(public_id);\n      if (!noPublicId) {\n        public_id = public_id.replace(new RegExp(\"/\", 'g'), \":\");\n        if (format != null) {\n          public_id = `${public_id}.${format}`;\n        }\n      }\n      if (isEmpty(text) && resource_type !== \"text\") {\n        if (noPublicId) {\n          throw \"Must supply public_id for resource_type layer_parameter\";\n        }\n        if (resource_type === \"subtitles\") {\n          style = textStyle(layer);\n        }\n      } else {\n        resource_type = \"text\";\n        type = null;\n        // type is ignored for text layers\n        style = textStyle(layer);\n        if (!isEmpty(text)) {\n          const noStyle = isEmpty(style);\n          if (!(noPublicId || noStyle) || (noPublicId && noStyle)) {\n            throw \"Must supply either style parameters or a public_id when providing text parameter in a text overlay/underlay\";\n          }\n          let re = /\\$\\([a-zA-Z]\\w*\\)/g;\n          let start = 0;\n          let textSource = smart_escape(decodeURIComponent(text), /[,\\/]/g);\n          text = \"\";\n          for (let res = re.exec(textSource); res; res = re.exec(textSource)) {\n            text += smart_escape(textSource.slice(start, res.index));\n            text += res[0];\n            start = res.index + res[0].length;\n          }\n          text += encodeURIComponent(textSource.slice(start));\n        }\n      }\n      if (resource_type !== \"image\") {\n        components.push(resource_type);\n      }\n      if (type !== \"upload\") {\n        components.push(type);\n      }\n      components.push(style);\n      components.push(public_id);\n      components.push(text);\n      result = compact(components).join(\":\");\n    }\n  } else if (/^fetch:.+/.test(layer)) {\n    result = `fetch:${base64EncodeURL(layer.substr(6))}`;\n  } else {\n    result = layer;\n  }\n  return result;\n}\n\n/**\n * Parse radius options\n * @private\n * @param {Array<string|number>|string|number} radius The radius to parse\n * @return {string} radius transformation string\n */\nfunction process_radius(radius) {\n  if (!radius) {\n    return radius;\n  }\n  if (!isArray(radius)) {\n    radius = [radius];\n  }\n  if (radius.length === 0 || radius.length > 4) {\n    throw new Error(\"Radius array should contain between 1 and 4 values\");\n  }\n  if (radius.findIndex(x => x === null) >= 0) {\n    throw new Error(\"Corner: Cannot be null\");\n  }\n  return radius.map(normalize_expression).join(':');\n}\n\nfunction build_upload_params(options) {\n  let params = {\n    access_mode: options.access_mode,\n    allowed_formats: options.allowed_formats && toArray(options.allowed_formats).join(\",\"),\n    async: utils.as_safe_bool(options.async),\n    backup: utils.as_safe_bool(options.backup),\n    callback: options.callback,\n    colors: utils.as_safe_bool(options.colors),\n    discard_original_filename: utils.as_safe_bool(options.discard_original_filename),\n    eager: utils.build_eager(options.eager),\n    eager_async: utils.as_safe_bool(options.eager_async),\n    eager_notification_url: options.eager_notification_url,\n    exif: utils.as_safe_bool(options.exif),\n    faces: utils.as_safe_bool(options.faces),\n    folder: options.folder,\n    format: options.format,\n    image_metadata: utils.as_safe_bool(options.image_metadata),\n    invalidate: utils.as_safe_bool(options.invalidate),\n    moderation: options.moderation,\n    notification_url: options.notification_url,\n    overwrite: utils.as_safe_bool(options.overwrite),\n    phash: utils.as_safe_bool(options.phash),\n    proxy: options.proxy,\n    public_id: options.public_id,\n    quality_analysis: utils.as_safe_bool(options.quality_analysis),\n    responsive_breakpoints: utils.generate_responsive_breakpoints_string(options.responsive_breakpoints),\n    return_delete_token: utils.as_safe_bool(options.return_delete_token),\n    timestamp: options.timestamp || exports.timestamp(),\n    transformation: utils.generate_transformation_string(clone(options)),\n    type: options.type,\n    unique_filename: utils.as_safe_bool(options.unique_filename),\n    upload_preset: options.upload_preset,\n    use_filename: utils.as_safe_bool(options.use_filename),\n    quality_override: options.quality_override,\n  };\n  return utils.updateable_resource_params(options, params);\n}\n\nfunction encode_key_value(arg) {\n  if (!isObject(arg)) { return arg; }\n  return entries(arg).map(([k, v]) => `${k}=${v}`).join('|');\n}\n\nfunction encode_context(arg) {\n  if (!isObject(arg)) { return arg; }\n  return entries(arg).map(([k, v]) => `${k}=${v.replace(/([=|])/g, '\\\\$&')}`).join('|');\n}\n\nfunction build_eager(transformations) {\n  return toArray(transformations)\n    .map((transformation) => {\n      const transformationString = utils.generate_transformation_string(clone(transformation));\n      const format = transformation.format;\n      return format == null ? transformationString : `${transformationString}/${format}`;\n    }).join('|');\n}\n/**\n * Build the custom headers for the request\n * @private\n * @param headers\n * @return {Array<string>|object|string} An object of name and value,\n *         an array of header strings, or a string of headers\n */\nfunction build_custom_headers(headers) {\n  switch (true) {\n    case headers == null:\n      return void 0;\n    case isArray(headers):\n      return headers.join(\"\\n\");\n    case isObject(headers):\n      return entries(headers).map(([k, v]) => `${k}:${v}`).join(\"\\n\");\n    default:\n      return headers;\n  }\n}\n\nfunction generate_transformation_string(options) {\n  if (utils.isString(options)) {\n    return options;\n  }\n  if (isArray(options)) {\n    return options.map(t => utils.generate_transformation_string(clone(t))).filter(utils.present).join('/');\n  }\n\n  let responsive_width = consumeOption(options, \"responsive_width\", config().responsive_width);\n  let width = options.width;\n  let height = options.height;\n  let size = consumeOption(options, \"size\");\n  if (size) {\n    [width, height] = size.split(\"x\");\n    [options.width, options.height] = [width, height];\n  }\n  let has_layer = options.overlay || options.underlay;\n  let crop = consumeOption(options, \"crop\");\n  let angle = toArray(consumeOption(options, \"angle\")).join(\".\");\n  let no_html_sizes = has_layer || utils.present(angle) || crop === \"fit\" || crop === \"limit\" || responsive_width;\n  if (width && (width.toString().indexOf(\"auto\") === 0 || no_html_sizes || parseFloat(width) < 1)) {\n    delete options.width;\n  }\n  if (height && (no_html_sizes || parseFloat(height) < 1)) {\n    delete options.height;\n  }\n  let background = consumeOption(options, \"background\");\n  background = background && background.replace(/^#/, \"rgb:\");\n  let color = consumeOption(options, \"color\");\n  color = color && color.replace(/^#/, \"rgb:\");\n  let base_transformations = toArray(consumeOption(options, \"transformation\", []));\n  let named_transformation = [];\n  if (base_transformations.some(isObject)) {\n    base_transformations = base_transformations.map(tr => utils.generate_transformation_string(\n      isObject(tr) ? clone(tr) : { transformation: tr }\n    ));\n  } else {\n    named_transformation = base_transformations.join(\".\");\n    base_transformations = [];\n  }\n  let effect = consumeOption(options, \"effect\");\n  if (isArray(effect)) {\n    effect = effect.join(\":\");\n  } else if (isObject(effect)) {\n    effect = entries(effect).map(\n      ([key, value]) => `${key}:${value}`,\n    );\n  }\n  let border = consumeOption(options, \"border\");\n  if (isObject(border)) {\n    border = `${border.width != null ? border.width : 2}px_solid_${(border.color != null ? border.color : \"black\").replace(/^#/, 'rgb:')}`;\n  } else if (/^\\d+$/.exec(border)) { // fallback to html border attributes\n    options.border = border;\n    border = void 0;\n  }\n  let flags = toArray(consumeOption(options, \"flags\")).join(\".\");\n  let dpr = consumeOption(options, \"dpr\", config().dpr);\n  if (options.offset != null) {\n    [options.start_offset, options.end_offset] = split_range(consumeOption(options, \"offset\"));\n  }\n  let overlay = process_layer(consumeOption(options, \"overlay\"));\n  let radius = process_radius(consumeOption(options, \"radius\"));\n  let underlay = process_layer(consumeOption(options, \"underlay\"));\n  let ifValue = process_if(consumeOption(options, \"if\"));\n  let custom_function = process_custom_function(consumeOption(options, \"custom_function\"));\n  let custom_pre_function = process_custom_pre_function(consumeOption(options, \"custom_pre_function\"));\n  let fps = consumeOption(options, 'fps');\n  if (isArray(fps)) {\n    fps = fps.join('-');\n  }\n  let params = {\n    a: normalize_expression(angle),\n    ar: normalize_expression(consumeOption(options, \"aspect_ratio\")),\n    b: background,\n    bo: border,\n    c: crop,\n    co: color,\n    dpr: normalize_expression(dpr),\n    e: normalize_expression(effect),\n    fl: flags,\n    fn: custom_function || custom_pre_function,\n    fps: fps,\n    h: normalize_expression(height),\n    ki: normalize_expression(consumeOption(options, \"keyframe_interval\")),\n    l: overlay,\n    o: normalize_expression(consumeOption(options, \"opacity\")),\n    q: normalize_expression(consumeOption(options, \"quality\")),\n    r: radius,\n    t: named_transformation,\n    u: underlay,\n    w: normalize_expression(width),\n    x: normalize_expression(consumeOption(options, \"x\")),\n    y: normalize_expression(consumeOption(options, \"y\")),\n    z: normalize_expression(consumeOption(options, \"zoom\")),\n  };\n\n  SIMPLE_PARAMS.forEach(([name, short]) => {\n    let value = consumeOption(options, name);\n    if (value !== undefined) {\n      params[short] = value;\n    }\n  });\n  if (params.vc != null) {\n    params.vc = process_video_params(params.vc);\n  }\n  [\"so\", \"eo\", \"du\"].forEach((short) => {\n    if (params[short] !== undefined) {\n      params[short] = norm_range_value(params[short]);\n    }\n  });\n\n  let variablesParam = consumeOption(options, \"variables\", []);\n  let variables = entries(options)\n    .filter(([key, value]) => key.startsWith('$'))\n    .map(([key, value]) => {\n      delete options[key];\n      return `${key}_${normalize_expression(value)}`;\n    }).sort().concat(\n      variablesParam.map(([name, value]) => `${name}_${normalize_expression(value)}`),\n    ).join(',');\n\n  let transformations = entries(params)\n    .filter(([key, value]) => utils.present(value))\n    .map(([key, value]) => key + '_' + value)\n    .sort()\n    .join(',');\n\n  let raw_transformation = consumeOption(options, 'raw_transformation');\n  transformations = compact([ifValue, variables, transformations, raw_transformation]).join(\",\");\n  base_transformations.push(transformations);\n  transformations = base_transformations;\n  if (responsive_width) {\n    let responsive_width_transformation = config().responsive_width_transformation\n      || DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION;\n\n    transformations.push(utils.generate_transformation_string(clone(responsive_width_transformation)));\n  }\n  if (String(width).startsWith(\"auto\") || responsive_width) {\n    options.responsive = true;\n  }\n  if (dpr === \"auto\") {\n    options.hidpi = true;\n  }\n  return filter(transformations, utils.present).join(\"/\");\n}\n\nfunction updateable_resource_params(options, params = {}) {\n  if (options.access_control != null) {\n    params.access_control = utils.jsonArrayParam(options.access_control);\n  }\n  if (options.auto_tagging != null) {\n    params.auto_tagging = options.auto_tagging;\n  }\n  if (options.background_removal != null) {\n    params.background_removal = options.background_removal;\n  }\n  if (options.categorization != null) {\n    params.categorization = options.categorization;\n  }\n  if (options.context != null) {\n    params.context = utils.encode_context(options.context);\n  }\n  if (options.metadata != null) {\n    params.metadata = utils.encode_context(options.metadata);\n  }\n  if (options.custom_coordinates != null) {\n    params.custom_coordinates = encodeDoubleArray(options.custom_coordinates);\n  }\n  if (options.detection != null) {\n    params.detection = options.detection;\n  }\n  if (options.face_coordinates != null) {\n    params.face_coordinates = encodeDoubleArray(options.face_coordinates);\n  }\n  if (options.headers != null) {\n    params.headers = utils.build_custom_headers(options.headers);\n  }\n  if (options.notification_url != null) {\n    params.notification_url = options.notification_url;\n  }\n  if (options.ocr != null) {\n    params.ocr = options.ocr;\n  }\n  if (options.raw_convert != null) {\n    params.raw_convert = options.raw_convert;\n  }\n  if (options.similarity_search != null) {\n    params.similarity_search = options.similarity_search;\n  }\n  if (options.tags != null) {\n    params.tags = toArray(options.tags).join(\",\");\n  }\n  if (options.quality_override != null) {\n    params.quality_override = options.quality_override;\n  }\n  return params;\n}\n\n/**\n * A list of keys used by the url() function.\n * @private\n */\nconst URL_KEYS = [\n  'api_secret',\n  'auth_token',\n  'cdn_subdomain',\n  'cloud_name',\n  'cname',\n  'format',\n  'private_cdn',\n  'resource_type',\n  'secure',\n  'secure_cdn_subdomain',\n  'secure_distribution',\n  'shorten',\n  'sign_url',\n  'ssl_detected',\n  'type',\n  'url_suffix',\n  'use_root_path',\n  'version',\n];\n\n/**\n * Create a new object with only URL parameters\n * @param {object} options The source object\n * @return {Object} An object containing only URL parameters\n */\n\nfunction extractUrlParams(options) {\n  return utils.only(options, ...URL_KEYS);\n}\n\n/**\n * Create a new object with only transformation parameters\n * @param {object} options The source object\n * @return {Object} An object containing only transformation parameters\n */\n\nfunction extractTransformationParams(options) {\n  return utils.only(options, ...TRANSFORMATION_PARAMS);\n}\n\n/**\n * Handle the format parameter for fetch urls\n * @private\n * @param options url and transformation options. This argument may be changed by the function!\n */\n\nfunction patchFetchFormat(options = {}) {\n  if (options.type === \"fetch\") {\n    if (options.fetch_format == null) {\n      options.fetch_format = consumeOption(options, \"format\");\n    }\n  }\n}\n\nfunction url(public_id, options = {}) {\n  let signature, source_to_sign;\n  utils.patchFetchFormat(options);\n  let type = consumeOption(options, \"type\", null);\n  let transformation = utils.generate_transformation_string(options);\n\n  let resource_type = consumeOption(options, \"resource_type\", \"image\");\n  let version = consumeOption(options, \"version\");\n  let force_version = consumeOption(options, \"force_version\", config().force_version);\n  if (force_version == null) {\n    force_version = true;\n  }\n  let format = consumeOption(options, \"format\");\n  let cloud_name = consumeOption(options, \"cloud_name\", config().cloud_name);\n  if (!cloud_name) {\n    throw \"Unknown cloud_name\";\n  }\n  let private_cdn = consumeOption(options, \"private_cdn\", config().private_cdn);\n  let secure_distribution = consumeOption(options, \"secure_distribution\", config().secure_distribution);\n  let secure = consumeOption(options, \"secure\", null);\n  let ssl_detected = consumeOption(options, \"ssl_detected\", config().ssl_detected);\n  if (secure === null) {\n    secure = ssl_detected || config().secure;\n  }\n  let cdn_subdomain = consumeOption(options, \"cdn_subdomain\", config().cdn_subdomain);\n  let secure_cdn_subdomain = consumeOption(options, \"secure_cdn_subdomain\", config().secure_cdn_subdomain);\n  let cname = consumeOption(options, \"cname\", config().cname);\n  let shorten = consumeOption(options, \"shorten\", config().shorten);\n  let sign_url = consumeOption(options, \"sign_url\", config().sign_url);\n  let api_secret = consumeOption(options, \"api_secret\", config().api_secret);\n  let url_suffix = consumeOption(options, \"url_suffix\");\n  let use_root_path = consumeOption(options, \"use_root_path\", config().use_root_path);\n  let auth_token = consumeOption(options, \"auth_token\");\n  if (auth_token !== false) {\n    auth_token = exports.merge(config().auth_token, auth_token);\n  }\n  let preloaded = /^(image|raw)\\/([a-z0-9_]+)\\/v(\\d+)\\/([^#]+)$/.exec(public_id);\n  if (preloaded) {\n    resource_type = preloaded[1];\n    type = preloaded[2];\n    version = preloaded[3];\n    public_id = preloaded[4];\n  }\n  let original_source = public_id;\n  if (public_id == null) {\n    return original_source;\n  }\n  public_id = public_id.toString();\n  if (type === null && public_id.match(/^https?:\\//i)) {\n    return original_source;\n  }\n  [resource_type, type] = finalize_resource_type(resource_type, type, url_suffix, use_root_path, shorten);\n  [public_id, source_to_sign] = finalize_source(public_id, format, url_suffix);\n\n  if (version == null && force_version && source_to_sign.indexOf(\"/\") >= 0 && !source_to_sign.match(/^v[0-9]+/) && !source_to_sign.match(/^https?:\\//)) {\n    version = 1;\n  }\n  if (version != null) {\n    version = `v${version}`;\n  } else {\n    version = null;\n  }\n\n  transformation = transformation.replace(/([^:])\\/\\//g, '$1/');\n  if (sign_url && isEmpty(auth_token)) {\n    let to_sign = [transformation, source_to_sign].filter(function (part) {\n      return (part != null) && part !== '';\n    }).join('/');\n    try {\n      for (let i = 0; to_sign !== decodeURIComponent(to_sign) && i < 10; i++) {\n        to_sign = decodeURIComponent(to_sign);\n      }\n      // eslint-disable-next-line no-empty\n    } catch (error) {\n    }\n    let shasum = crypto.createHash('sha1');\n    shasum.update(utf8_encode(to_sign + api_secret), 'binary');\n    signature = shasum.digest('base64').replace(/\\//g, '_').replace(/\\+/g, '-').substring(0, 8);\n    signature = `s--${signature}--`;\n  }\n  let prefix = unsigned_url_prefix(\n    public_id,\n    cloud_name,\n    private_cdn,\n    cdn_subdomain,\n    secure_cdn_subdomain,\n    cname,\n    secure,\n    secure_distribution,\n  );\n  let resultUrl = [prefix, resource_type, type, signature, transformation, version, public_id].filter(function (part) {\n    return (part != null) && part !== '';\n  }).join('/').replace(' ', '%20');\n  if (sign_url && !isEmpty(auth_token)) {\n    auth_token.url = urlParse(resultUrl).path;\n    let token = generate_token(auth_token);\n    resultUrl += `?${token}`;\n  }\n  return resultUrl;\n}\n\nfunction video_url(public_id, options) {\n  options = extend({\n    resource_type: 'video',\n  }, options);\n  return utils.url(public_id, options);\n}\n\nfunction finalize_source(source, format, url_suffix) {\n  let source_to_sign;\n  source = source.replace(/([^:])\\/\\//g, '$1/');\n  if (source.match(/^https?:\\//i)) {\n    source = smart_escape(source);\n    source_to_sign = source;\n  } else {\n    source = encodeURIComponent(decodeURIComponent(source)).replace(/%3A/g, \":\").replace(/%2F/g, \"/\");\n    source_to_sign = source;\n    if (url_suffix) {\n      if (url_suffix.match(/[\\.\\/]/)) {\n        throw new Error('url_suffix should not include . or /');\n      }\n      source = source + '/' + url_suffix;\n    }\n    if (format != null) {\n      source = source + '.' + format;\n      source_to_sign = source_to_sign + '.' + format;\n    }\n  }\n  return [source, source_to_sign];\n}\n\nfunction video_thumbnail_url(public_id, options) {\n  options = extend({}, DEFAULT_POSTER_OPTIONS, options);\n  return utils.url(public_id, options);\n}\n\nfunction finalize_resource_type(resource_type, type, url_suffix, use_root_path, shorten) {\n  if (type == null) {\n    type = 'upload';\n  }\n  if (url_suffix != null) {\n    if (resource_type === 'image' && type === 'upload') {\n      resource_type = \"images\";\n      type = null;\n    } else if (resource_type === 'image' && type === 'private') {\n      resource_type = 'private_images';\n      type = null;\n    } else if (resource_type === 'image' && type === 'authenticated') {\n      resource_type = 'authenticated_images';\n      type = null;\n    } else if (resource_type === 'raw' && type === 'upload') {\n      resource_type = 'files';\n      type = null;\n    } else if (resource_type === 'video' && type === 'upload') {\n      resource_type = 'videos';\n      type = null;\n    } else {\n      throw new Error(\"URL Suffix only supported for image/upload, image/private, image/authenticated, video/upload and raw/upload\");\n    }\n  }\n  if (use_root_path) {\n    if ((resource_type === 'image' && type === 'upload') || (resource_type === 'images' && (type == null))) {\n      resource_type = null;\n      type = null;\n    } else {\n      throw new Error(\"Root path only supported for image/upload\");\n    }\n  }\n  if (shorten && resource_type === 'image' && type === 'upload') {\n    resource_type = 'iu';\n    type = null;\n  }\n  return [resource_type, type];\n}\n// cdn_subdomain and secure_cdn_subdomain\n// 1) Customers in shared distribution (e.g. res.cloudinary.com)\n//    if cdn_domain is true uses res-[1-5].cloudinary.com for both http and https.\n//    Setting secure_cdn_subdomain to false disables this for https.\n// 2) Customers with private cdn\n//    if cdn_domain is true uses cloudname-res-[1-5].cloudinary.com for http\n//    if secure_cdn_domain is true uses cloudname-res-[1-5].cloudinary.com for https\n//      (please contact support if you require this)\n// 3) Customers with cname\n//    if cdn_domain is true uses a[1-5].cname for http.\n//    For https, uses the same naming scheme as 1 for shared distribution and as 2 for private distribution.\n\nfunction unsigned_url_prefix(\n  source,\n  cloud_name,\n  private_cdn,\n  cdn_subdomain,\n  secure_cdn_subdomain,\n  cname,\n  secure,\n  secure_distribution,\n) {\n  let prefix;\n  if (cloud_name.indexOf(\"/\") === 0) {\n    return '/res' + cloud_name;\n  }\n  let shared_domain = !private_cdn;\n  if (secure) {\n    if ((secure_distribution == null) || secure_distribution === exports.OLD_AKAMAI_SHARED_CDN) {\n      secure_distribution = private_cdn ? cloud_name + \"-res.cloudinary.com\" : exports.SHARED_CDN;\n    }\n    if (shared_domain == null) {\n      shared_domain = secure_distribution === exports.SHARED_CDN;\n    }\n    if ((secure_cdn_subdomain == null) && shared_domain) {\n      secure_cdn_subdomain = cdn_subdomain;\n    }\n    if (secure_cdn_subdomain) {\n      secure_distribution = secure_distribution.replace('res.cloudinary.com', 'res-' + ((crc32(source) % 5) + 1 + '.cloudinary.com'));\n    }\n    prefix = 'https://' + secure_distribution;\n  } else if (cname) {\n    let subdomain = cdn_subdomain ? 'a' + ((crc32(source) % 5) + 1) + '.' : '';\n    prefix = 'http://' + subdomain + cname;\n  } else {\n    let cdn_part = private_cdn ? cloud_name + '-' : '';\n    let subdomain_part = cdn_subdomain ? '-' + ((crc32(source) % 5) + 1) : '';\n    let host = [cdn_part, 'res', subdomain_part, '.cloudinary.com'].join('');\n    prefix = 'http://' + host;\n  }\n  if (shared_domain) {\n    prefix += '/' + cloud_name;\n  }\n  return prefix;\n}\n\nfunction api_url(action = 'upload', options = {}) {\n  let cloudinary = ensureOption(options, \"upload_prefix\", \"https://api.cloudinary.com\");\n  let cloud_name = ensureOption(options, \"cloud_name\");\n  let resource_type = options.resource_type || \"image\";\n  return [cloudinary, \"v1_1\", cloud_name, resource_type, action].join(\"/\");\n}\n\nfunction random_public_id() {\n  return crypto.randomBytes(12).toString('base64').replace(/[^a-z0-9]/g, \"\");\n}\n\nfunction signed_preloaded_image(result) {\n  return `${result.resource_type}/upload/v${result.version}/${filter([result.public_id, result.format], utils.present).join(\".\")}#${result.signature}`;\n}\n\nfunction api_sign_request(params_to_sign, api_secret) {\n  let to_sign = entries(params_to_sign).filter(\n    ([k, v]) => utils.present(v),\n  ).map(\n    ([k, v]) => `${k}=${toArray(v).join(\",\")}`,\n  ).sort().join(\"&\");\n  let shasum = crypto.createHash('sha1');\n  shasum.update(utf8_encode(to_sign + api_secret), 'binary');\n  return shasum.digest('hex');\n}\n\nfunction clear_blank(hash) {\n  let filtered_hash = {};\n  entries(hash).filter(\n    ([k, v]) => utils.present(v),\n  ).forEach(\n    ([k, v]) => { filtered_hash[k] = v; },\n  );\n  return filtered_hash;\n}\n\nfunction merge(hash1, hash2) {\n  return { ...hash1, ...hash2 };\n}\n\nfunction sign_request(params, options = {}) {\n  let apiKey = ensureOption(options, 'api_key');\n  let apiSecret = ensureOption(options, 'api_secret');\n  params = exports.clear_blank(params);\n  params.signature = exports.api_sign_request(params, apiSecret);\n  params.api_key = apiKey;\n  return params;\n}\n\nfunction webhook_signature(data, timestamp, options = {}) {\n  ensurePresenceOf({ data, timestamp });\n\n  let api_secret = ensureOption(options, 'api_secret');\n  let shasum = crypto.createHash('sha1');\n  shasum.update(data + timestamp + api_secret, 'binary');\n  return shasum.digest('hex');\n}\n\n/**\n * Verifies the authenticity of a notification signature\n *\n * @param {string} body JSON of the request's body\n * @param {number} timestamp Unix timestamp. Can be retrieved from the X-Cld-Timestamp header\n * @param {string} signature Actual signature. Can be retrieved from the X-Cld-Signature header\n * @param {number} [valid_for=7200] The desired time in seconds for considering the request valid\n *\n * @return {boolean}\n */\nfunction verifyNotificationSignature(body, timestamp, signature, valid_for = 7200) {\n  // verify that signature is valid for the given timestamp\n  if (timestamp < Date.now() - valid_for) {\n    return false;\n  }\n  const payload_hash = utils.webhook_signature(body, timestamp, { api_secret: config().api_secret });\n  return signature === payload_hash;\n}\n\nfunction process_request_params(params, options) {\n  if ((options.unsigned != null) && options.unsigned) {\n    params = exports.clear_blank(params);\n    delete params.timestamp;\n  } else if (options.signature) {\n    params = exports.clear_blank(options);\n  } else {\n    params = exports.sign_request(params, options);\n  }\n  return params;\n}\n\nfunction private_download_url(public_id, format, options = {}) {\n  let params = exports.sign_request({\n    timestamp: options.timestamp || exports.timestamp(),\n    public_id: public_id,\n    format: format,\n    type: options.type,\n    attachment: options.attachment,\n    expires_at: options.expires_at,\n  }, options);\n  return exports.api_url(\"download\", options) + \"?\" + querystring.stringify(params);\n}\n\n/**\n * Utility method that uses the deprecated ZIP download API.\n * @deprecated Replaced by {download_zip_url} that uses the more advanced and robust archive generation and download API\n */\n\nfunction zip_download_url(tag, options = {}) {\n  let params = exports.sign_request({\n    timestamp: options.timestamp || exports.timestamp(),\n    tag: tag,\n    transformation: utils.generate_transformation_string(options),\n  }, options);\n  return exports.api_url(\"download_tag.zip\", options) + \"?\" + hashToQuery(params);\n}\n\n/**\n * Returns a URL that when invokes creates an archive and returns it.\n * @param {object} options\n * @param {string} [options.resource_type=\"image\"] The resource type of files to include in the archive.\n *   Must be one of :image | :video | :raw\n * @param {string} [options.type=\"upload\"] The specific file type of resources: :upload|:private|:authenticated\n * @param {string|Array} [options.tags] list of tags to include in the archive\n * @param {string|Array<string>} [options.public_ids] list of public_ids to include in the archive\n * @param {string|Array<string>} [options.prefixes]  list of prefixes of public IDs (e.g., folders).\n * @param {string|Array<string>} [options.fully_qualified_public_ids] list of fully qualified public_ids to include\n *   in the archive.\n * @param {string|Array<string>} [options.transformations]  list of transformations.\n *   The derived images of the given transformations are included in the archive. Using the string representation of\n *   multiple chained transformations as we use for the 'eager' upload parameter.\n * @param {string} [options.mode=\"create\"] return the generated archive file or to store it as a raw resource and\n *   return a JSON with URLs for accessing the archive. Possible values: :download, :create\n * @param {string} [options.target_format=\"zip\"]\n * @param {string} [options.target_public_id]  public ID of the generated raw resource.\n *   Relevant only for the create mode. If not specified, random public ID is generated.\n * @param {boolean} [options.flatten_folders=false] If true, flatten public IDs with folders to be in the root\n *   of the archive. Add numeric counter to the file name in case of a name conflict.\n * @param {boolean} [options.flatten_transformations=false] If true, and multiple transformations are given,\n *   flatten the folder structure of derived images and store the transformation details on the file name instead.\n * @param {boolean} [options.use_original_filename] Use the original file name of included images\n *   (if available) instead of the public ID.\n * @param {boolean} [options.async=false] If true, return immediately and perform archive creation in the background.\n *   Relevant only for the create mode.\n * @param {string} [options.notification_url] URL to send an HTTP post request (webhook) to when the\n *   archive creation is completed.\n * @param {string|Array<string>} [options.target_tags=] Allows assigning one or more tags to the generated archive file\n *   (for later housekeeping via the admin API).\n * @param {string} [options.keep_derived=false] keep the derived images used for generating the archive\n * @return {String} archive url\n */\nfunction download_archive_url(options = {}) {\n  let cloudinary_params = exports.sign_request(exports.archive_params(merge(options, {\n    mode: \"download\",\n  })), options);\n  return exports.api_url(\"generate_archive\", options) + \"?\" + hashToQuery(cloudinary_params);\n}\n\n/**\n * Returns a URL that when invokes creates an zip archive and returns it.\n * @see download_archive_url\n */\n\nfunction download_zip_url(options = {}) {\n  return exports.download_archive_url(merge(options, {\n    target_format: \"zip\",\n  }));\n}\n\n/**\n * Render the key/value pair as an HTML tag attribute\n * @private\n * @param {string} key\n * @param {string|boolean|number} [value]\n * @return {string} A string representing the HTML attribute\n */\nfunction join_pair(key, value) {\n  if (!value) { return void 0; }\n  return value === true ? key : key + \"='\" + value + \"'\";\n}\n\n/**\n * If the given value is a string, replaces single or double quotes with character entities\n * @private\n * @param {*} value The string to encode quotes in\n * @return {*} Encoded string or original value if not a string\n */\nfunction escapeQuotes(value) {\n  return isString(value) ? value.replace('\"', '&#34;').replace(\"'\", '&#39;') : value;\n}\n\n/**\n *\n * @param attrs\n * @return {*}\n */\nexports.html_attrs = function html_attrs(attrs) {\n  return filter(map(attrs, function (value, key) {\n    return join_pair(key, escapeQuotes(value));\n  })).sort().join(\" \");\n};\n\nconst CLOUDINARY_JS_CONFIG_PARAMS = ['api_key', 'cloud_name', 'private_cdn', 'secure_distribution', 'cdn_subdomain'];\n\nfunction cloudinary_js_config() {\n  let params = utils.only(config(), ...CLOUDINARY_JS_CONFIG_PARAMS);\n  return `<script type='text/javascript'>\\n$.cloudinary.config(${JSON.stringify(params)});\\n</script>`;\n}\n\nfunction v1_result_adapter(callback) {\n  if (callback == null) { return undefined; }\n  return function (result) {\n    if (result.error != null) {\n      return callback(result.error);\n    }\n    return callback(void 0, result);\n  };\n}\n\nfunction v1_adapter(name, num_pass_args, v1) {\n  return function (...args) {\n    let pass_args = take(args, num_pass_args);\n    let options = args[num_pass_args];\n    let callback = args[num_pass_args + 1];\n    if ((callback == null) && isFunction(options)) {\n      callback = options;\n      options = {};\n    }\n    callback = v1_result_adapter(callback);\n    args = pass_args.concat([callback, options]);\n    return v1[name].apply(this, args);\n  };\n}\n\nfunction v1_adapters(exports, v1, mapping) {\n  return Object.keys(mapping).map((name) => {\n    let num_pass_args = mapping[name];\n    exports[name] = v1_adapter(name, num_pass_args, v1);\n    return exports[name];\n  });\n}\n\nfunction as_safe_bool(value) {\n  if (value == null) {\n    return void 0;\n  }\n  if (value === true || value === 'true' || value === '1') {\n    value = 1;\n  }\n  if (value === false || value === 'false' || value === '0') {\n    value = 0;\n  }\n  return value;\n}\n\nconst NUMBER_PATTERN = \"([0-9]*)\\\\.([0-9]+)|([0-9]+)\";\n\nconst OFFSET_ANY_PATTERN = `(${NUMBER_PATTERN})([%pP])?`;\nconst RANGE_VALUE_RE = RegExp(`^${OFFSET_ANY_PATTERN}$`);\nconst OFFSET_ANY_PATTERN_RE = RegExp(`(${OFFSET_ANY_PATTERN})\\\\.\\\\.(${OFFSET_ANY_PATTERN})`);\n\n// Split a range into the start and end values\nfunction split_range(range) { // :nodoc:\n  switch (range.constructor) {\n    case String:\n      if (!OFFSET_ANY_PATTERN_RE.test(range)) {\n        return range;\n      }\n      return range.split(\"..\");\n    case Array:\n      return [first(range), last(range)];\n    default:\n      return [null, null];\n  }\n}\n\nfunction norm_range_value(value) { // :nodoc:\n  let offset = String(value).match(RANGE_VALUE_RE);\n  if (offset) {\n    let modifier = offset[5] ? 'p' : '';\n    value = `${offset[1] || offset[4]}${modifier}`;\n  }\n  return value;\n}\n\n/**\n * A video codec parameter can be either a String or a Hash.\n * @param {Object} param <code>vc_<codec>[ : <profile> : [<level>]]</code>\n *                       or <code>{ codec: 'h264', profile: 'basic', level: '3.1' }</code>\n * @return {String} <code><codec> : <profile> : [<level>]]</code> if a Hash was provided\n *                   or the param if a String was provided.\n *                   Returns null if param is not a Hash or String\n */\nfunction process_video_params(param) {\n  switch (param.constructor) {\n    case Object: {\n      let video = \"\";\n      if ('codec' in param) {\n        video = param.codec;\n        if ('profile' in param) {\n          video += \":\" + param.profile;\n          if ('level' in param) {\n            video += \":\" + param.level;\n          }\n        }\n      }\n      return video;\n    }\n    case String:\n      return param;\n    default:\n      return null;\n  }\n}\n/**\n * Returns a Hash of parameters used to create an archive\n * @private\n * @param {object} options\n * @return {object} Archive API parameters\n */\n\nfunction archive_params(options = {}) {\n  return {\n    allow_missing: exports.as_safe_bool(options.allow_missing),\n    async: exports.as_safe_bool(options.async),\n    expires_at: options.expires_at,\n    flatten_folders: exports.as_safe_bool(options.flatten_folders),\n    flatten_transformations: exports.as_safe_bool(options.flatten_transformations),\n    keep_derived: exports.as_safe_bool(options.keep_derived),\n    mode: options.mode,\n    notification_url: options.notification_url,\n    prefixes: options.prefixes && toArray(options.prefixes),\n    fully_qualified_public_ids: options.fully_qualified_public_ids && toArray(options.fully_qualified_public_ids),\n    public_ids: options.public_ids && toArray(options.public_ids),\n    skip_transformation_name: exports.as_safe_bool(options.skip_transformation_name),\n    tags: options.tags && toArray(options.tags),\n    target_format: options.target_format,\n    target_public_id: options.target_public_id,\n    target_tags: options.target_tags && toArray(options.target_tags),\n    timestamp: options.timestamp || exports.timestamp(),\n    transformations: utils.build_eager(options.transformations),\n    type: options.type,\n    use_original_filename: exports.as_safe_bool(options.use_original_filename),\n  };\n}\n\nexports.create_source_tag = function create_source_tag(src, source_type, codecs = null) {\n  let video_type = source_type === 'ogv' ? 'ogg' : source_type;\n  let mime_type = `video/${video_type}`;\n  if (!isEmpty(codecs)) {\n    let codecs_str = isArray(codecs) ? codecs.join(', ') : codecs;\n    mime_type += `; codecs=${codecs_str}`;\n  }\n  return `<source ${utils.html_attrs({ src, type: mime_type })}>`;\n};\n\nfunction build_explicit_api_params(public_id, options = {}) {\n  return [exports.build_upload_params(extend({}, { public_id }, options))];\n}\n\nfunction generate_responsive_breakpoints_string(breakpoints) {\n  if (breakpoints == null) {\n    return null;\n  }\n  breakpoints = clone(breakpoints);\n  if (!isArray(breakpoints)) {\n    breakpoints = [breakpoints];\n  }\n  for (let j = 0; j < breakpoints.length; j++) {\n    let breakpoint_settings = breakpoints[j];\n    if (breakpoint_settings != null) {\n      if (breakpoint_settings.transformation) {\n        breakpoint_settings.transformation = utils.generate_transformation_string(\n          clone(breakpoint_settings.transformation),\n        );\n      }\n    }\n  }\n  return JSON.stringify(breakpoints);\n}\n\nfunction build_streaming_profiles_param(options = {}) {\n  let params = utils.only(options, \"display_name\", \"representations\");\n  if (isArray(params.representations)) {\n    params.representations = JSON.stringify(params.representations.map(\n      r => ({\n        transformation: utils.generate_transformation_string(r.transformation),\n      }),\n    ));\n  }\n  return params;\n}\n\nfunction hashToParameters(hash) {\n  return entries(hash).reduce((parameters, [key, value]) => {\n    if (isArray(value)) {\n      key = key.endsWith('[]') ? key : key + '[]';\n      const items = value.map(v => [key, v]);\n      parameters = parameters.concat(items);\n    } else {\n      parameters.push([key, value]);\n    }\n    return parameters;\n  }, []);\n}\n\n/**\n * Convert a hash of values to a URI query string.\n * Array values are spread as individual parameters.\n * @param {object} hash Key-value parameters\n * @return {string} A URI query string.\n */\nfunction hashToQuery(hash) {\n  return hashToParameters(hash).map(\n    ([key, value]) => `${querystring.escape(key)}=${querystring.escape(value)}`,\n  ).join('&');\n}\n\n/**\n * Verify that the parameter `value` is defined and it's string value is not zero.\n * <br>This function should not be confused with `isEmpty()`.\n * @private\n * @param {string|number} value The value to check.\n * @return {boolean} True if the value is defined and not empty.\n */\n\nfunction present(value) {\n  return value != null && (\"\" + value).length > 0;\n}\n\n/**\n * Returns a new object with key values from source based on the keys.\n * `null` or `undefined` values are not copied.\n * @private\n * @param {object} source The object to pick values from.\n * @param {...string} keys One or more keys to copy from source.\n * @return {object} A new object with the required keys and values.\n */\n\nfunction only(source, ...keys) {\n  let result = {};\n  if (source) {\n    for (let j = 0; j < keys.length; j++) {\n      let key = keys[j];\n      if (source[key] != null) {\n        result[key] = source[key];\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Returns a JSON array as String.\n * Yields the array before it is converted to JSON format\n * @private\n * @param {object|String|Array<object>} data\n * @param {function(*):*} [modifier] called with the array before the array is stringified\n * @return {String|null} a JSON array string or `null` if data is `null`\n */\n\nfunction jsonArrayParam(data, modifier) {\n  if (!data) {\n    return null;\n  }\n  if (isString(data)) {\n    data = JSON.parse(data);\n  }\n  if (!isArray(data)) {\n    data = [data];\n  }\n  if (isFunction(modifier)) {\n    data = modifier(data);\n  }\n  return JSON.stringify(data);\n}\n\n/**\n * Empty function - do nothing\n *\n */\nexports.NOP = function () {};\nexports.generate_auth_token = generate_auth_token;\nexports.getUserAgent = getUserAgent;\nexports.build_upload_params = build_upload_params;\nexports.timestamp = () => Math.floor(new Date().getTime() / 1000);\nexports.option_consume = consumeOption; // for backwards compatibility\nexports.build_array = toArray; // for backwards compatibility\nexports.encode_double_array = encodeDoubleArray;\nexports.encode_key_value = encode_key_value;\nexports.encode_context = encode_context;\nexports.build_eager = build_eager;\nexports.build_custom_headers = build_custom_headers;\nexports.generate_transformation_string = generate_transformation_string;\nexports.updateable_resource_params = updateable_resource_params;\nexports.extractUrlParams = extractUrlParams;\nexports.extractTransformationParams = extractTransformationParams;\nexports.patchFetchFormat = patchFetchFormat;\nexports.url = url;\nexports.video_url = video_url;\nexports.video_thumbnail_url = video_thumbnail_url;\nexports.api_url = api_url;\nexports.random_public_id = random_public_id;\nexports.signed_preloaded_image = signed_preloaded_image;\nexports.api_sign_request = api_sign_request;\nexports.clear_blank = clear_blank;\nexports.merge = merge;\nexports.sign_request = sign_request;\nexports.webhook_signature = webhook_signature;\nexports.verifyNotificationSignature = verifyNotificationSignature;\nexports.process_request_params = process_request_params;\nexports.private_download_url = private_download_url;\nexports.zip_download_url = zip_download_url;\nexports.download_archive_url = download_archive_url;\nexports.download_zip_url = download_zip_url;\nexports.cloudinary_js_config = cloudinary_js_config;\nexports.v1_adapters = v1_adapters;\nexports.as_safe_bool = as_safe_bool;\nexports.archive_params = archive_params;\nexports.build_explicit_api_params = build_explicit_api_params;\nexports.generate_responsive_breakpoints_string = generate_responsive_breakpoints_string;\nexports.build_streaming_profiles_param = build_streaming_profiles_param;\nexports.hashToParameters = hashToParameters;\nexports.present = present;\nexports.only = only;\nexports.jsonArrayParam = jsonArrayParam;\n// was exported before, so kept for backwards compatibility\nexports.DEFAULT_POSTER_OPTIONS = DEFAULT_POSTER_OPTIONS;\nexports.DEFAULT_VIDEO_SOURCE_TYPES = DEFAULT_VIDEO_SOURCE_TYPES;\n\nObject.assign(module.exports, {\n  at,\n  clone,\n  extend,\n  filter,\n  includes,\n  isArray,\n  isEmpty,\n  isNumber,\n  isObject,\n  isRemoteUrl,\n  isString,\n  isUndefined,\n  keys: source => Object.keys(source),\n  ensurePresenceOf,\n});\n"]},"metadata":{},"sourceType":"script"}