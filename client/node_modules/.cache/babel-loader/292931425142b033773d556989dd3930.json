{"ast":null,"code":"var _jsxFileName = \"/home/thomas/code/Lersoo/tutorial_maker/client/src/components/Steps/CreateStep.jsx\";\nimport React, { Component } from 'react';\nimport API from '../../utils/API';\nimport { Form, Input } from '../shared/formComponents';\nimport cloudinary from 'cloudinary-core';\nexport default class CreateStep extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      step_description: '',\n      step_media: ''\n    };\n\n    this.onChangeStepDescription = e => {\n      this.setState({\n        step_description: e.target.value\n      });\n    };\n\n    this.onChangeStepMedia = e => {\n      this.setState({\n        step_media: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const tutorialID = this.props.match.params.id;\n      const mediaFile = this.state.step_media;\n      this.uploadFile(mediaFile);\n      const newStep = {\n        step_description: this.state.step_description,\n        step_media: this.state.step_media\n      };\n      API.createStep(tutorialID, newStep).then(res => {\n        console.log(res);\n        window.location.href = `/tutorials/${tutorialID}`;\n      }).catch(err => console.log(err));\n    };\n  }\n\n  uploadFile(file) {\n    const cloudName = 'dimzs5mei';\n    const url = `https://api.cloudinary.com/v1_1/${cloudName}/upload`;\n    const uploadPreset = 'tutorial_maker';\n    const xhr = new XMLHttpRequest();\n    const fd = new FormData();\n    xhr.open('POST', url, true);\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        // File uploaded successfully\n        const response = JSON.parse(xhr.responseText);\n        console.log(response); // https://res.cloudinary.com/cloudName/image/upload/v1483481128/public_id.jpg\n\n        const url = response.secure_url;\n      }\n    };\n\n    fd.append('upload_preset', uploadPreset);\n    fd.append('file', file);\n    xhr.send(fd);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"Create a new tutorial\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"Enter a description for this step\",\n      onChange: this.onChangeStepDescription,\n      value: this.state.step_description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      type: \"file\",\n      placeholder: \"Choose an image\",\n      onChange: this.onChangeStepMedia,\n      value: this.state.step_media,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/thomas/code/Lersoo/tutorial_maker/client/src/components/Steps/CreateStep.jsx"],"names":["React","Component","API","Form","Input","cloudinary","CreateStep","state","step_description","step_media","onChangeStepDescription","e","setState","target","value","onChangeStepMedia","onSubmit","preventDefault","tutorialID","props","match","params","id","mediaFile","uploadFile","newStep","createStep","then","res","console","log","window","location","href","catch","err","file","cloudName","url","uploadPreset","xhr","XMLHttpRequest","fd","FormData","open","setRequestHeader","onreadystatechange","readyState","status","response","JSON","parse","responseText","secure_url","append","send","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport API from '../../utils/API';\nimport { Form, Input } from '../shared/formComponents'\n\nimport cloudinary from 'cloudinary-core';\n\nexport default class CreateStep extends Component {\n  state = {\n    step_description: '',\n    step_media: ''\n  }\n\n  onChangeStepDescription = (e) => {\n    this.setState({ step_description: e.target.value })\n  };\n\n  onChangeStepMedia = (e) => {\n    this.setState({ step_media: e.target.value })\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const tutorialID = this.props.match.params.id;\n\n    const mediaFile = this.state.step_media;\n\n    this.uploadFile(mediaFile);\n\n    const newStep = {\n      step_description: this.state.step_description,\n      step_media: this.state.step_media,\n    };\n\n    API.createStep(tutorialID, newStep)\n      .then(res => {\n        console.log(res)\n        window.location.href = `/tutorials/${tutorialID}`\n      })\n      .catch(err => console.log(err))\n  }\n\n  uploadFile(file) {\n    const cloudName = 'dimzs5mei';\n    const url = `https://api.cloudinary.com/v1_1/${cloudName}/upload`;\n    const uploadPreset = 'tutorial_maker';\n    const xhr = new XMLHttpRequest();\n    const fd = new FormData();\n    xhr.open('POST', url, true);\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        // File uploaded successfully\n        const response = JSON.parse(xhr.responseText);\n        console.log(response);\n\n        // https://res.cloudinary.com/cloudName/image/upload/v1483481128/public_id.jpg\n        const url = response.secure_url;\n      }\n    };\n    fd.append('upload_preset', uploadPreset);\n    fd.append('file', file);\n    xhr.send(fd);\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Create a new tutorial</h2>\n        <Form onSubmit={this.onSubmit}>\n          <Input\n            type='text'\n            placeholder=\"Enter a description for this step\"\n            onChange={this.onChangeStepDescription}\n            value={this.state.step_description}\n          />\n          <Input\n            type='file'\n            placeholder='Choose an image'\n            onChange={this.onChangeStepMedia}\n            value={this.state.step_media}\n          />\n          <Input type='submit' />\n        </Form>\n      </div>\n\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}