{"ast":null,"code":"var _jsxFileName = \"/home/thomas/code/Lersoo/tutorial_maker/client/src/components/Steps/CreateStep.jsx\";\nimport React, { Component } from 'react';\nimport API from '../../utils/API';\nimport { Form, Input } from '../shared/formComponents';\nexport default class CreateStep extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      step_description: '',\n      step_media: ''\n    };\n\n    this.onChangeStepDescription = e => {\n      this.setState({\n        step_description: e.target.value\n      });\n    };\n\n    this.onChangeStepMedia = e => {\n      console.log(e.target.files[0]);\n      this.setState({\n        step_media: e.target.files[0]\n      });\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const mediaFile = this.state.step_media;\n      this.uploadFile(mediaFile);\n    };\n\n    this.createStep = (tutorialID, secure_url) => {\n      const description = this.state.step_description;\n      console.log(description);\n      console.log('je suis la');\n      const newStep = {\n        step_description: description,\n        step_media: secure_url\n      };\n      API.createStep(tutorialID, newStep).then(res => {\n        console.log(res);\n        window.location.href = `/tutorials/${tutorialID}`;\n      }).catch(err => console.log(err));\n    };\n  }\n\n  uploadFile(file) {\n    const tutorialID = this.props.match.params.id;\n    const cloudName = 'dimzs5mei';\n    const url = `https://api.cloudinary.com/v1_1/${cloudName}/upload`;\n    const uploadPreset = 'tutorial_maker';\n    const fd = new FormData();\n    const xhr = new XMLHttpRequest();\n    const createStep = this.createStep;\n    xhr.open('POST', url, true);\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        // File uploaded successfully\n        const response = JSON.parse(xhr.responseText);\n        createStep(tutorialID, response.secure_url);\n      }\n    };\n\n    console.log(xhr.onreadystatechange);\n    fd.append('upload_preset', uploadPreset);\n    fd.append('file', file);\n    xhr.send(fd);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \"Create a new tutorial\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"Enter a description for this step\",\n      onChange: this.onChangeStepDescription,\n      value: this.state.step_description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      type: \"file\",\n      placeholder: \"Choose an image\",\n      accept: \"image/*\",\n      onChange: this.onChangeStepMedia,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/thomas/code/Lersoo/tutorial_maker/client/src/components/Steps/CreateStep.jsx"],"names":["React","Component","API","Form","Input","CreateStep","state","step_description","step_media","onChangeStepDescription","e","setState","target","value","onChangeStepMedia","console","log","files","onSubmit","preventDefault","mediaFile","uploadFile","createStep","tutorialID","secure_url","description","newStep","then","res","window","location","href","catch","err","file","props","match","params","id","cloudName","url","uploadPreset","fd","FormData","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","status","response","JSON","parse","responseText","append","send","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,0BAA5B;AAEA,eAAe,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAChDK,KADgD,GACxC;AACNC,MAAAA,gBAAgB,EAAE,EADZ;AAENC,MAAAA,UAAU,EAAE;AAFN,KADwC;;AAAA,SAMhDC,uBANgD,GAMrBC,CAAD,IAAO;AAC/B,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,gBAAgB,EAAEG,CAAC,CAACE,MAAF,CAASC;AAA7B,OAAd;AACD,KAR+C;;AAAA,SAUhDC,iBAVgD,GAU3BJ,CAAD,IAAO;AACzBK,MAAAA,OAAO,CAACC,GAAR,CAAYN,CAAC,CAACE,MAAF,CAASK,KAAT,CAAe,CAAf,CAAZ;AACA,WAAKN,QAAL,CAAc;AAAEH,QAAAA,UAAU,EAAEE,CAAC,CAACE,MAAF,CAASK,KAAT,CAAe,CAAf;AAAd,OAAd;AACD,KAb+C;;AAAA,SAehDC,QAfgD,GAerC,MAAOR,CAAP,IAAa;AACtBA,MAAAA,CAAC,CAACS,cAAF;AACA,YAAMC,SAAS,GAAG,KAAKd,KAAL,CAAWE,UAA7B;AACA,WAAKa,UAAL,CAAgBD,SAAhB;AACD,KAnB+C;;AAAA,SA4ChDE,UA5CgD,GA4CnC,CAACC,UAAD,EAAaC,UAAb,KAA4B;AACvC,YAAMC,WAAW,GAAG,KAAKnB,KAAL,CAAWC,gBAA/B;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYS,WAAZ;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,YAAMU,OAAO,GAAG;AACdnB,QAAAA,gBAAgB,EAAEkB,WADJ;AAEdjB,QAAAA,UAAU,EAAEgB;AAFE,OAAhB;AAKAtB,MAAAA,GAAG,CAACoB,UAAJ,CAAeC,UAAf,EAA2BG,OAA3B,EACGC,IADH,CACQC,GAAG,IAAI;AACXb,QAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAwB,cAAaR,UAAW,EAAhD;AACD,OAJH,EAKGS,KALH,CAKSC,GAAG,IAAIlB,OAAO,CAACC,GAAR,CAAYiB,GAAZ,CALhB;AAMD,KA5D+C;AAAA;;AAqBhDZ,EAAAA,UAAU,CAACa,IAAD,EAAO;AACf,UAAMX,UAAU,GAAG,KAAKY,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA3C;AACA,UAAMC,SAAS,GAAG,WAAlB;AACA,UAAMC,GAAG,GAAI,mCAAkCD,SAAU,SAAzD;AACA,UAAME,YAAY,GAAG,gBAArB;AACA,UAAMC,EAAE,GAAG,IAAIC,QAAJ,EAAX;AACA,UAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACA,UAAMvB,UAAU,GAAG,KAAKA,UAAxB;AACAsB,IAAAA,GAAG,CAACE,IAAJ,CAAS,MAAT,EAAiBN,GAAjB,EAAsB,IAAtB;AACAI,IAAAA,GAAG,CAACG,gBAAJ,CAAqB,kBAArB,EAAyC,gBAAzC;;AACAH,IAAAA,GAAG,CAACI,kBAAJ,GAAyB,UAAUtC,CAAV,EAAa;AACpC,UAAIkC,GAAG,CAACK,UAAJ,KAAmB,CAAnB,IAAwBL,GAAG,CAACM,MAAJ,KAAe,GAA3C,EAAgD;AAC9C;AACA,cAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWT,GAAG,CAACU,YAAf,CAAjB;AACAhC,QAAAA,UAAU,CAACC,UAAD,EAAa4B,QAAQ,CAAC3B,UAAtB,CAAV;AACD;AACF,KAND;;AAOAT,IAAAA,OAAO,CAACC,GAAR,CAAY4B,GAAG,CAACI,kBAAhB;AACAN,IAAAA,EAAE,CAACa,MAAH,CAAU,eAAV,EAA2Bd,YAA3B;AACAC,IAAAA,EAAE,CAACa,MAAH,CAAU,MAAV,EAAkBrB,IAAlB;AACAU,IAAAA,GAAG,CAACY,IAAJ,CAASd,EAAT;AACD;;AAoBDe,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAEE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKvC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,mCAFd;AAGE,MAAA,QAAQ,EAAE,KAAKT,uBAHjB;AAIE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,gBAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,iBAFd;AAGE,MAAA,MAAM,EAAC,SAHT;AAIE,MAAA,QAAQ,EAAE,KAAKO,iBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eAaE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CAFF,CADF;AAqBD;;AApF+C","sourcesContent":["import React, { Component } from 'react'\nimport API from '../../utils/API';\nimport { Form, Input } from '../shared/formComponents'\n\nexport default class CreateStep extends Component {\n  state = {\n    step_description: '',\n    step_media: ''\n  }\n\n  onChangeStepDescription = (e) => {\n    this.setState({ step_description: e.target.value })\n  };\n\n  onChangeStepMedia = (e) => {\n    console.log(e.target.files[0]);\n    this.setState({ step_media: e.target.files[0] })\n  }\n\n  onSubmit = async (e) => {\n    e.preventDefault();\n    const mediaFile = this.state.step_media;\n    this.uploadFile(mediaFile);\n  }\n\n  uploadFile(file) {\n    const tutorialID = this.props.match.params.id;\n    const cloudName = 'dimzs5mei';\n    const url = `https://api.cloudinary.com/v1_1/${cloudName}/upload`;\n    const uploadPreset = 'tutorial_maker';\n    const fd = new FormData();\n    const xhr = new XMLHttpRequest();\n    const createStep = this.createStep;\n    xhr.open('POST', url, true);\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        // File uploaded successfully\n        const response = JSON.parse(xhr.responseText);\n        createStep(tutorialID, response.secure_url);\n      }\n    };\n    console.log(xhr.onreadystatechange);\n    fd.append('upload_preset', uploadPreset);\n    fd.append('file', file);\n    xhr.send(fd);\n  }\n\n  createStep = (tutorialID, secure_url) => {\n    const description = this.state.step_description;\n    console.log(description)\n    console.log('je suis la')\n\n    const newStep = {\n      step_description: description,\n      step_media: secure_url\n    };\n\n    API.createStep(tutorialID, newStep)\n      .then(res => {\n        console.log(res)\n        window.location.href = `/tutorials/${tutorialID}`\n      })\n      .catch(err => console.log(err))\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Create a new tutorial</h2>\n        <Form onSubmit={this.onSubmit}>\n          <Input\n            type='text'\n            placeholder=\"Enter a description for this step\"\n            onChange={this.onChangeStepDescription}\n            value={this.state.step_description}\n          />\n          <Input\n            type='file'\n            placeholder='Choose an image'\n            accept=\"image/*\"\n            onChange={this.onChangeStepMedia}\n          />\n          <Input type='submit' />\n        </Form>\n      </div>\n\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}